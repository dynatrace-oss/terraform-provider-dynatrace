openapi: "3.0.3"
info:
  title: "Automation"
  version: "1.704.1"
  description: "Automation API allows working with workflows and various trigger options."
paths:
  /action-executions/{id}:
    get:
      operationId: "getActionExecution"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this action execution."
        required: true
      tags:
      - "action-executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionExecution"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /action-executions/{id}/log:
    get:
      operationId: "getActionExecutionLog"
      description: "**Required scope:** automation:workflows:read<br/><br/>Returns\
        \ the log output of a specific ActionExecution."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this action execution."
        required: true
      tags:
      - "action-executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            text/plain; charset=utf-8:
              schema:
                type: "string"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /actions-sample-result/{actionIdentifier}:
    get:
      operationId: "getActionSampleResult"
      parameters:
      - in: "path"
        name: "actionIdentifier"
        schema:
          type: "string"
        required: true
      tags:
      - "actions-sample-result"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /business-calendars:
    get:
      operationId: "getBusinessCalendars"
      parameters:
      - name: "limit"
        required: false
        in: "query"
        description: "Number of results to return per page."
        schema:
          type: "integer"
      - name: "offset"
        required: false
        in: "query"
        description: "The initial index from which to return the results."
        schema:
          type: "integer"
      - name: "ordering"
        required: false
        in: "query"
        description: "Which field to use when ordering the results."
        schema:
          type: "string"
      - name: "search"
        required: false
        in: "query"
        description: "A search term."
        schema:
          type: "string"
      tags:
      - "business-calendars"
      security:
      - client_credentials:
        - "automation:calendars:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedBusinessCalendarList"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:read"
    post:
      operationId: "createBusinessCalendar"
      tags:
      - "business-calendars"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessCalendarRequest"
        required: true
      security:
      - client_credentials:
        - "automation:calendars:write"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessCalendar"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:write"
  /business-calendars/{id}:
    get:
      operationId: "getBusinessCalendar"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this business calendar."
        required: true
      tags:
      - "business-calendars"
      security:
      - client_credentials:
        - "automation:calendars:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessCalendar"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:read"
    put:
      operationId: "updateBusinessCalendar"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this business calendar."
        required: true
      tags:
      - "business-calendars"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessCalendarRequest"
        required: true
      security:
      - client_credentials:
        - "automation:calendars:write"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessCalendar"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:write"
    patch:
      operationId: "patchBusinessCalendar"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this business calendar."
        required: true
      tags:
      - "business-calendars"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedBusinessCalendarRequest"
      security:
      - client_credentials:
        - "automation:calendars:write"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessCalendar"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:write"
    delete:
      operationId: "deleteBusinessCalendar"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this business calendar."
        required: true
      tags:
      - "business-calendars"
      security:
      - client_credentials:
        - "automation:calendars:write"
      responses:
        "204":
          description: "No response body"
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:write"
  /business-calendars/{id}/duplicate:
    post:
      operationId: "duplicateBusinessCalendar"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this business calendar."
        required: true
      tags:
      - "business-calendars"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DuplicationRequest"
      security:
      - client_credentials:
        - "automation:calendars:write"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessCalendar"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:write"
  /business-calendars/{id}/history:
    get:
      operationId: "getBusinessCalendarHistoryRecords"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this business calendar."
        required: true
      tags:
      - "business-calendars"
      security:
      - client_credentials:
        - "automation:calendars:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedChangeHistory"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:read"
  /business-calendars/{id}/history/{version}:
    get:
      operationId: "getBusinessCalendarHistoryRecord"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this business calendar."
        required: true
      - in: "path"
        name: "version"
        schema:
          type: "string"
          pattern: "^[\\d]+$"
        required: true
      tags:
      - "business-calendars"
      security:
      - client_credentials:
        - "automation:calendars:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessCalendar"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:read"
  /business-calendars/{id}/history/{version}/restore:
    post:
      operationId: "restoreBusinessCalendarHistoryRecord"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this business calendar."
        required: true
      - in: "path"
        name: "version"
        schema:
          type: "string"
          pattern: "^[\\d]+$"
        required: true
      tags:
      - "business-calendars"
      security:
      - client_credentials:
        - "automation:calendars:write"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessCalendar"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:calendars:write"
  /event-triggers/filter-preview:
    post:
      operationId: "previewFilter"
      tags:
      - "event-triggers"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventTriggerPreviewRequest"
        required: true
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventTriggerPreviewResponse"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /executions:
    get:
      operationId: "getExecutions"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - name: "limit"
        required: false
        in: "query"
        description: "Number of results to return per page."
        schema:
          type: "integer"
      - name: "offset"
        required: false
        in: "query"
        description: "The initial index from which to return the results."
        schema:
          type: "integer"
      - name: "ordering"
        required: false
        in: "query"
        description: "Which field to use when ordering the results."
        schema:
          type: "string"
      - in: "query"
        name: "schedule"
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
        description: "Multiple values may be separated by commas."
        explode: false
        style: "form"
      - name: "search"
        required: false
        in: "query"
        description: "A search term."
        schema:
          type: "string"
      - in: "query"
        name: "startedAt__gte"
        schema:
          type: "string"
          format: "date-time"
      - in: "query"
        name: "startedAt__lte"
        schema:
          type: "string"
          format: "date-time"
      - in: "query"
        name: "state"
        schema:
          type: "array"
          items:
            type: "string"
        description: "Multiple values may be separated by commas."
        explode: false
        style: "form"
      - in: "query"
        name: "task"
        schema:
          type: "string"
      - in: "query"
        name: "trigger"
        schema:
          type: "string"
      - in: "query"
        name: "triggerType"
        schema:
          type: "string"
      - in: "query"
        name: "user"
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
        description: "Multiple values may be separated by commas."
        explode: false
        style: "form"
      - in: "query"
        name: "workflow"
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
        description: "Multiple values may be separated by commas."
        explode: false
        style: "form"
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedExecutionList"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /executions/{executionId}/tasks:
    get:
      operationId: "getTaskExecutions"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "executionId"
        schema:
          type: "string"
          format: "uuid"
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskExecutions"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /executions/{executionId}/tasks/{id}:
    get:
      operationId: "getTaskExecution"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "executionId"
        schema:
          type: "string"
          format: "uuid"
        required: true
      - in: "path"
        name: "id"
        schema:
          type: "string"
        description: "Task name"
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskExecution"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /executions/{executionId}/tasks/{id}/cancel:
    post:
      operationId: "cancelTaskExecution"
      description: "**Required scope:** automation:workflows:run<br/><br/>Cancels\
        \ task execution.\nCanceling action executions cause the task to be cancelled,\
        \ which\ncauses the workflow to be canceled."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "executionId"
        schema:
          type: "string"
          format: "uuid"
        required: true
      - in: "path"
        name: "id"
        schema:
          type: "string"
        description: "Task name"
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:run"
      responses:
        "200":
          description: "No response body"
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/{executionId}/tasks/{id}/input:
    get:
      operationId: "getTaskExecutionInput"
      description: "**Required scope:** automation:workflows:read<br/><br/>Returns\
        \ merged inputs from all ActionExecutions belonging to the TaskExecution."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "executionId"
        schema:
          type: "string"
          format: "uuid"
        required: true
      - in: "path"
        name: "id"
        schema:
          type: "string"
        description: "Task name"
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                additionalProperties: {}
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/{executionId}/tasks/{id}/log:
    get:
      operationId: "getTaskExecutionLog"
      description: "**Required scope:** automation:workflows:read<br/><br/>Returns\
        \ the log output of a specific task.\nThis can be large as its the STDOUT\
        \ of the Action\nas defined by the user."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "executionId"
        schema:
          type: "string"
          format: "uuid"
        required: true
      - in: "path"
        name: "id"
        schema:
          type: "string"
        description: "Task name"
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            text/plain; charset=utf-8:
              schema:
                type: "string"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/{executionId}/tasks/{id}/result:
    get:
      operationId: "getTaskExecutionResult"
      description: "**Required scope:** automation:workflows:read<br/><br/>Returns\
        \ merged results from all ActionExecutions belonging to the TaskExecution."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "executionId"
        schema:
          type: "string"
          format: "uuid"
        required: true
      - in: "path"
        name: "id"
        schema:
          type: "string"
        description: "Task name"
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/{executionId}/transitions:
    get:
      operationId: "getTransitions"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "executionId"
        schema:
          type: "string"
          format: "uuid"
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskTransitions"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /executions/{id}:
    get:
      operationId: "getExecution"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this execution."
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /executions/{id}/actions:
    get:
      operationId: "getExecutionActions"
      description: "**Required scope:** automation:workflows:read<br/><br/>Return\
        \ list of actions assigned to tasks in a given Execution."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this execution."
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/{id}/all-event-logs:
    get:
      operationId: "getAllEventLogs"
      description: "**Required scope:** automation:workflows:read<br/><br/>Get all\
        \ event logs"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this execution."
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventLogs"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/{id}/cancel:
    post:
      operationId: "cancelExecution"
      description: "**Required scope:** automation:workflows:run<br/><br/>Tries to\
        \ cancel an Execution.\nCan only be done, if the Execution is in an active\
        \ state."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this execution."
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:run"
      responses:
        "204":
          description: "No response body"
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/{id}/log:
    get:
      operationId: "getExecutionLog"
      description: "**Required scope:** automation:workflows:read<br/><br/>Gets the\
        \ execution log"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this execution."
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            text/plain; charset=utf-8:
              schema:
                type: "string"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/{id}/pause:
    post:
      operationId: "pauseExecution"
      description: "**Required scope:** automation:workflows:run<br/><br/>Pauses an\
        \ Execution.\nCan only be done, if the Execution is in an active state."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this execution."
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:run"
      responses:
        "204":
          description: "No response body"
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/{id}/resume:
    post:
      operationId: "resumeExecution"
      description: "**Required scope:** automation:workflows:run<br/><br/>Resumes\
        \ an Execution.\nCan only be done, if the Execution is in an inactive state."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this execution."
        required: true
      tags:
      - "executions"
      security:
      - client_credentials:
        - "automation:workflows:run"
      responses:
        "204":
          description: "No response body"
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /executions/task-input-preview:
    post:
      operationId: "previewTaskInput"
      description: "**Required scope:** automation:workflows:read<br/><br/>Returns\
        \ preview expression by given task id from the workflow definition"
      tags:
      - "executions"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreviewTaskInputRequest"
        required: true
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreviewTaskInputResponse"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /schedules/holiday-calendars:
    get:
      operationId: "getHolidayCalendars"
      tags:
      - "schedules"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HolidayResponse"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /schedules/holiday-calendars/{key}:
    get:
      operationId: "getHolidayCalendar"
      parameters:
      - in: "query"
        name: "from"
        schema:
          type: "string"
          format: "date"
        description: "From date in ISO format"
      - in: "path"
        name: "key"
        schema:
          type: "string"
        required: true
      - in: "query"
        name: "to"
        schema:
          type: "string"
          format: "date"
        description: "To date in ISO format"
      tags:
      - "schedules"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HolidayResponse"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /schedules/preview:
    post:
      operationId: "previewSchedule"
      tags:
      - "schedules"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchedulePreviewRequest"
        required: true
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchedulePreviewResponse"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /schedules/timezones:
    get:
      operationId: "getTimezones"
      tags:
      - "schedules"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /scheduling-rules:
    get:
      operationId: "getRules"
      parameters:
      - name: "limit"
        required: false
        in: "query"
        description: "Number of results to return per page."
        schema:
          type: "integer"
      - name: "offset"
        required: false
        in: "query"
        description: "The initial index from which to return the results."
        schema:
          type: "integer"
      - name: "ordering"
        required: false
        in: "query"
        description: "Which field to use when ordering the results."
        schema:
          type: "string"
      - name: "search"
        required: false
        in: "query"
        description: "A search term."
        schema:
          type: "string"
      tags:
      - "scheduling-rules"
      security:
      - client_credentials:
        - "automation:rules:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedRuleList"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:read"
    post:
      operationId: "createRule"
      tags:
      - "scheduling-rules"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleRequest"
        required: true
      security:
      - client_credentials:
        - "automation:rules:write"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rule"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:write"
  /scheduling-rules/{id}:
    get:
      operationId: "getRule"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this rule."
        required: true
      tags:
      - "scheduling-rules"
      security:
      - client_credentials:
        - "automation:rules:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rule"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:read"
    put:
      operationId: "updateRule"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this rule."
        required: true
      tags:
      - "scheduling-rules"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleRequest"
        required: true
      security:
      - client_credentials:
        - "automation:rules:write"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rule"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:write"
    patch:
      operationId: "patchRule"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this rule."
        required: true
      tags:
      - "scheduling-rules"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedRuleRequest"
      security:
      - client_credentials:
        - "automation:rules:write"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rule"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:write"
    delete:
      operationId: "deleteRule"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this rule."
        required: true
      tags:
      - "scheduling-rules"
      security:
      - client_credentials:
        - "automation:rules:write"
      responses:
        "204":
          description: "No response body"
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:write"
  /scheduling-rules/{id}/duplicate:
    post:
      operationId: "duplicateRule"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this rule."
        required: true
      tags:
      - "scheduling-rules"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DuplicationRequest"
      security:
      - client_credentials:
        - "automation:rules:write"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rule"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:write"
  /scheduling-rules/{id}/history:
    get:
      operationId: "getRuleHistoryRecords"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this rule."
        required: true
      tags:
      - "scheduling-rules"
      security:
      - client_credentials:
        - "automation:rules:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedChangeHistory"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:read"
  /scheduling-rules/{id}/history/{version}:
    get:
      operationId: "getRuleHistoryRecord"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this rule."
        required: true
      - in: "path"
        name: "version"
        schema:
          type: "string"
          pattern: "^[\\d]+$"
        required: true
      tags:
      - "scheduling-rules"
      security:
      - client_credentials:
        - "automation:rules:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rule"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:read"
  /scheduling-rules/{id}/history/{version}/restore:
    post:
      operationId: "restoreRuleHistoryRecord"
      parameters:
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this rule."
        required: true
      - in: "path"
        name: "version"
        schema:
          type: "string"
          pattern: "^[\\d]+$"
        required: true
      tags:
      - "scheduling-rules"
      security:
      - client_credentials:
        - "automation:rules:write"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rule"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:rules:write"
  /scheduling-rules/preview:
    post:
      operationId: "previewRule"
      tags:
      - "scheduling-rules"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RulePreviewRequest"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RulePreviewResponse"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /settings:
    get:
      operationId: "getSettings"
      description: "**Required scope:** automation:workflows:read<br/><br/>Get system\
        \ settings"
      tags:
      - "settings"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                additionalProperties: {}
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /settings/authorizations-update:
    post:
      operationId: "updateAuthorizations"
      tags:
      - "settings"
      security:
      - client_credentials:
        - "automation:workflows:write"
      responses:
        "202":
          description: "No response body"
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:write"
  /settings/service-users:
    get:
      operationId: "getServiceUsers"
      description: "**Required scope:** automation:workflows:read<br/><br/>Get service\
        \ users who could be used as workflow actor"
      tags:
      - "settings"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                additionalProperties: {}
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /settings/user:
    get:
      operationId: "getUserSettings"
      description: "**Required scope:** automation:workflows:read<br/><br/>Get user-specific\
        \ settings"
      tags:
      - "settings"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettings"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /settings/user-permissions:
    get:
      operationId: "getUserPermissions"
      description: "**Required scope:** automation:workflows:read<br/><br/>Get current\
        \ user effective permissions."
      tags:
      - "settings"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /version:
    get:
      operationId: "getVersion"
      tags:
      - "version"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionResponse"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /workflows:
    get:
      operationId: "getWorkflows"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "query"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
      - in: "query"
        name: "lastExecution__state__in"
        schema:
          type: "array"
          items:
            type: "string"
        description: "Multiple values may be separated by commas."
        explode: false
        style: "form"
      - name: "limit"
        required: false
        in: "query"
        description: "Number of results to return per page."
        schema:
          type: "integer"
      - in: "query"
        name: "modificationInfo__lastModifiedBy"
        schema:
          type: "array"
          items:
            type: "string"
        description: "Multiple values may be separated by commas."
        explode: false
        style: "form"
      - name: "offset"
        required: false
        in: "query"
        description: "The initial index from which to return the results."
        schema:
          type: "integer"
      - name: "ordering"
        required: false
        in: "query"
        description: "Which field to use when ordering the results."
        schema:
          type: "string"
      - in: "query"
        name: "owner"
        schema:
          type: "string"
      - in: "query"
        name: "ownerType"
        schema:
          type: "string"
          enum:
          - "GROUP"
          - "USER"
        description: "* `USER` - USER\n* `GROUP` - GROUP"
      - name: "search"
        required: false
        in: "query"
        description: "A search term."
        schema:
          type: "string"
      - in: "query"
        name: "throttle__isLimitHit"
        schema:
          type: "boolean"
      - in: "query"
        name: "triggerType"
        schema:
          type: "string"
      - in: "query"
        name: "trigger__schedule__isFaulty"
        schema:
          type: "boolean"
      - in: "query"
        name: "usages"
        schema:
          type: "string"
      tags:
      - "workflows"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWorkflowList"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
    post:
      operationId: "createWorkflow"
      description: "**Required scope:** automation:workflows:write<br/><br/>Creates\
        \ a workflow and sets usages"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      tags:
      - "workflows"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowRequest"
        required: true
      security:
      - client_credentials:
        - "automation:workflows:write"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /workflows/{id}:
    get:
      operationId: "getWorkflow"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      tags:
      - "workflows"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
    put:
      operationId: "updateWorkflow"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      tags:
      - "workflows"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowRequest"
        required: true
      security:
      - client_credentials:
        - "automation:workflows:write"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:write"
    patch:
      operationId: "patchWorkflow"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      tags:
      - "workflows"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWorkflowRequest"
      security:
      - client_credentials:
        - "automation:workflows:write"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:write"
    delete:
      operationId: "deleteWorkflow"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      tags:
      - "workflows"
      security:
      - client_credentials:
        - "automation:workflows:write"
      responses:
        "204":
          description: "No response body"
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:write"
  /workflows/{id}/actions:
    get:
      operationId: "getWorkflowActions"
      description: "**Required scope:** automation:workflows:read<br/><br/>Return\
        \ list of actions assigned to tasks in a given Workflow."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      tags:
      - "workflows"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /workflows/{id}/duplicate:
    post:
      operationId: "duplicateWorkflow"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      tags:
      - "workflows"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DuplicationRequest"
      security:
      - client_credentials:
        - "automation:workflows:write"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:write"
  /workflows/{id}/history:
    get:
      operationId: "getWorkflowHistoryRecords"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      tags:
      - "workflows"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedChangeHistory"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /workflows/{id}/history/{version}:
    get:
      operationId: "getWorkflowHistoryRecord"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      - in: "path"
        name: "version"
        schema:
          type: "string"
          pattern: "^[\\d]+$"
        required: true
      tags:
      - "workflows"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /workflows/{id}/history/{version}/restore:
    post:
      operationId: "restoreWorkflowHistoryRecord"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      - in: "path"
        name: "version"
        schema:
          type: "string"
          pattern: "^[\\d]+$"
        required: true
      tags:
      - "workflows"
      security:
      - client_credentials:
        - "automation:workflows:write"
      responses:
        "200":
          description: "No response body"
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:write"
  /workflows/{id}/run:
    post:
      operationId: "runWorkflow"
      description: "**Required scope:** automation:workflows:run<br/><br/>Creates\
        \ an Execution for the Workflow."
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      tags:
      - "workflows"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecutionInputsRequest"
      security:
      - client_credentials:
        - "automation:workflows:run"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: ""
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
  /workflows/{id}/tasks:
    get:
      operationId: "getWorkflowTasks"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
          format: "uuid"
        description: "A UUID string identifying this workflow."
        required: true
      tags:
      - "workflows"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tasks"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
  /workflows/{workflowId}/tasks/{id}:
    get:
      operationId: "getWorkflowTask"
      parameters:
      - in: "query"
        name: "adminAccess"
        schema:
          type: "boolean"
          default: false
        description: "Allow access to all workflows/executions - additionally requires\
          \ **automation:workflows:admin**"
      - in: "path"
        name: "id"
        schema:
          type: "string"
        required: true
      - in: "path"
        name: "workflowId"
        schema:
          type: "string"
          format: "uuid"
        required: true
      tags:
      - "workflows"
      security:
      - client_credentials:
        - "automation:workflows:read"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: ""
        "4XX":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
          description: ""
      description: "**Required scope:** automation:workflows:read"
components:
  schemas:
    ActionExecution:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        taskExe:
          type: "string"
          format: "uuid"
          nullable: true
          description: "Parent task execution"
        state:
          enum:
          - "WAITING"
          - "RUNNING"
          - "SUSPENDED"
          - "SUCCESS"
          - "ERROR"
          type: "string"
          description: "* `WAITING` - WAITING\n* `RUNNING` - RUNNING\n* `SUSPENDED`\
            \ - SUSPENDED\n* `SUCCESS` - SUCCESS\n* `ERROR` - ERROR"
        stateInfo:
          type: "string"
          nullable: true
        input:
          type: "object"
          additionalProperties: {}
        result: {}
        startedAt:
          type: "string"
          format: "date-time"
          nullable: true
        endedAt:
          type: "string"
          format: "date-time"
          nullable: true
        runtime:
          type: "integer"
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        actionExecutionId:
          type: "string"
          nullable: true
          maxLength: 50
        attempt:
          type: "integer"
          maximum: 2147483647
          minimum: -2147483648
        loopItem:
          type: "object"
          additionalProperties: {}
        action:
          type: "string"
          maxLength: 200
      required:
      - "action"
    BusinessCalendar:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        title:
          type: "string"
          maxLength: 200
        version:
          type: "integer"
          readOnly: true
        weekstart:
          type: "integer"
          maximum: 60
          minimum: 1
        weekdays:
          $ref: "#/components/schemas/Weekdays"
        holidays:
          $ref: "#/components/schemas/Holidays"
        validFrom:
          type: "string"
          format: "date"
        validTo:
          type: "string"
          format: "date"
        description:
          type: "string"
        modificationInfo:
          readOnly: true
          anyOf:
          - $ref: "#/components/schemas/ModificationInfo"
      required:
      - "modificationInfo"
      - "title"
      - "version"
    BusinessCalendarRequest:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        title:
          type: "string"
          minLength: 1
          maxLength: 200
        weekstart:
          type: "integer"
          maximum: 60
          minimum: 1
        weekdays:
          $ref: "#/components/schemas/Weekdays"
        holidays:
          $ref: "#/components/schemas/Holidays"
        validFrom:
          type: "string"
          format: "date"
        validTo:
          type: "string"
          format: "date"
        description:
          type: "string"
      required:
      - "title"
    ChangeHistory:
      type: "object"
      properties:
        id:
          type: "integer"
        dateCreated:
          type: "string"
          format: "date-time"
        user:
          type: "string"
          readOnly: true
        version:
          type: "integer"
          minimum: 1
      required:
      - "dateCreated"
      - "id"
      - "user"
      - "version"
    CronTrigger:
      title: "CronTrigger"
      type: "object"
      properties:
        type:
          enum:
          - "cron"
          type: "string"
        cron:
          example: "0 0 * * *"
          type: "string"
      required:
      - "type"
      - "cron"
      additionalProperties: false
    DavisEventConfig:
      title: "DavisEventConfig"
      type: "object"
      properties:
        entityTagsMatch:
          $ref: "#/components/schemas/EntityTagsMatch"
        entityTags:
          default: {}
          anyOf:
          - $ref: "#/components/schemas/EntityTags"
        onProblemClose:
          default: false
          type: "boolean"
        names:
          minItems: 1
          uniqueItems: true
          type: "array"
          items:
            $ref: "#/components/schemas/DavisEventName"
        types:
          deprecated: true
          uniqueItems: true
          type: "array"
          items:
            type: "string"
        customFilter:
          type: "string"
      additionalProperties: false
    DavisEventName:
      title: "DavisEventName"
      type: "object"
      properties:
        match:
          $ref: "#/components/schemas/DavisEventNameMatch"
        name:
          type: "string"
      required:
      - "match"
      - "name"
      additionalProperties: false
    DavisEventNameMatch:
      title: "DavisEventNameMatch"
      description: "Davis event name match choices."
      enum:
      - "equals"
      - "contains"
      type: "string"
    DavisEventTriggerConfig:
      title: "DavisEventTriggerConfig"
      type: "object"
      properties:
        type:
          enum:
          - "davis-event"
          type: "string"
        value:
          $ref: "#/components/schemas/DavisEventConfig"
      required:
      - "type"
      - "value"
      additionalProperties: false
    DavisProblemCategories:
      title: "DavisProblemCategories"
      type: "object"
      properties:
        monitoringUnavailable:
          type: "boolean"
        availability:
          type: "boolean"
        error:
          type: "boolean"
        slowdown:
          type: "boolean"
        resource:
          type: "boolean"
        custom:
          type: "boolean"
        info:
          type: "boolean"
      additionalProperties: false
    DavisProblemConfig:
      title: "DavisProblemConfig"
      type: "object"
      properties:
        entityTagsMatch:
          $ref: "#/components/schemas/EntityTagsMatch"
        entityTags:
          default: {}
          anyOf:
          - $ref: "#/components/schemas/EntityTags"
        onProblemClose:
          default: false
          type: "boolean"
        categories:
          $ref: "#/components/schemas/DavisProblemCategories"
        customFilter:
          type: "string"
      required:
      - "categories"
      additionalProperties: false
    DavisProblemTriggerConfig:
      title: "DavisProblemTriggerConfig"
      type: "object"
      properties:
        type:
          enum:
          - "davis-problem"
          type: "string"
        value:
          $ref: "#/components/schemas/DavisProblemConfig"
      required:
      - "type"
      - "value"
      additionalProperties: false
    DuplicationRequest:
      type: "object"
      properties:
        title:
          type: "string"
          minLength: 1
    EntityTags:
      title: "EntityTags"
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/MaybeStringArray"
    EntityTagsMatch:
      title: "EntityTagsMatch"
      description: "Entity tags match choices."
      enum:
      - "all"
      - "any"
      type: "string"
    Error:
      type: "object"
      properties:
        message:
          type: "string"
        details:
          type: "object"
          additionalProperties: {}
      required:
      - "message"
    ErrorEnvelope:
      type: "object"
      properties:
        error:
          $ref: "#/components/schemas/Error"
      required:
      - "error"
    EventLog:
      title: "EventLog"
      type: "object"
      properties:
        source:
          $ref: "#/components/schemas/Source"
        cause:
          type: "string"
        event:
          type: "string"
        state:
          enum:
          - "DEACTIVATED"
          - "RUNNING"
          - "ERROR"
          - "SUCCESS"
          - "WAITING"
          - "IDLE"
          - "PAUSED"
          - "DELAYED"
          - "CANCELLED"
          - "SKIPPED"
          - "DISCARDED"
          type: "string"
        timestamp:
          type: "string"
          format: "date-time"
        context:
          type: "object"
      required:
      - "source"
      - "cause"
      - "event"
      - "state"
      - "timestamp"
    EventLogs:
      title: "EventLogs"
      type: "array"
      items:
        $ref: "#/components/schemas/EventLog"
    EventQuery:
      title: "EventQuery"
      type: "object"
      properties:
        query:
          minLength: 1
          maxLength: 800
          type: "string"
        eventType:
          default: "events"
          anyOf:
          - $ref: "#/components/schemas/EventType"
      required:
      - "query"
      additionalProperties: false
    EventQueryTriggerConfig:
      title: "EventQueryTriggerConfig"
      type: "object"
      properties:
        type:
          enum:
          - "event"
          type: "string"
        value:
          $ref: "#/components/schemas/EventQuery"
      required:
      - "type"
      - "value"
      additionalProperties: false
    EventTrigger:
      type: "object"
      properties:
        isActive:
          type: "boolean"
        filterQuery:
          type: "string"
          readOnly: true
        uniqueExpression:
          type: "string"
          readOnly: true
          nullable: true
        triggerConfiguration:
          $ref: "#/components/schemas/EventTriggerConfig"
      required:
      - "filterQuery"
      - "uniqueExpression"
    EventTriggerConfig:
      title: "EventTriggerConfig"
      discriminator:
        propertyName: "type"
        mapping:
          event: "#/components/schemas/EventQueryTriggerConfig"
          davis-problem: "#/components/schemas/DavisProblemTriggerConfig"
          davis-event: "#/components/schemas/DavisEventTriggerConfig"
      oneOf:
      - $ref: "#/components/schemas/EventQueryTriggerConfig"
      - $ref: "#/components/schemas/DavisProblemTriggerConfig"
      - $ref: "#/components/schemas/DavisEventTriggerConfig"
    EventTriggerPreviewRequest:
      type: "object"
      properties:
        triggerConfiguration:
          $ref: "#/components/schemas/EventTriggerConfig"
      required:
      - "triggerConfiguration"
    EventTriggerPreviewResponse:
      title: "EventTriggerPreviewResponse"
      type: "object"
      properties:
        triggerConfiguration:
          discriminator:
            propertyName: "type"
            mapping:
              event: "#/components/schemas/EventQueryTriggerConfig"
              davis-problem: "#/components/schemas/DavisProblemTriggerConfig"
              davis-event: "#/components/schemas/DavisEventTriggerConfig"
          oneOf:
          - $ref: "#/components/schemas/EventQueryTriggerConfig"
          - $ref: "#/components/schemas/DavisProblemTriggerConfig"
          - $ref: "#/components/schemas/DavisEventTriggerConfig"
        filterQuery:
          type: "string"
      required:
      - "triggerConfiguration"
      - "filterQuery"
    EventTriggerRequest:
      type: "object"
      properties:
        isActive:
          type: "boolean"
        triggerConfiguration:
          $ref: "#/components/schemas/EventTriggerConfig"
    EventType:
      title: "EventType"
      description: "Grail event type."
      enum:
      - "events"
      - "bizevents"
      type: "string"
    Execution:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        workflow:
          type: "string"
          format: "uuid"
          nullable: true
          description: "Executed Workflow"
        state:
          enum:
          - "RUNNING"
          - "SUCCESS"
          - "ERROR"
          - "WAITING"
          - "IDLE"
          - "PAUSED"
          - "DELAYED"
          - "CANCELLED"
          type: "string"
          description: "* `RUNNING` - RUNNING\n* `SUCCESS` - SUCCESS\n* `ERROR` -\
            \ ERROR\n* `WAITING` - WAITING\n* `IDLE` - IDLE\n* `PAUSED` - PAUSED\n\
            * `DELAYED` - DELAYED\n* `CANCELLED` - CANCELLED"
        stateInfo:
          type: "string"
          nullable: true
        input:
          type: "object"
          additionalProperties: {}
        params:
          type: "object"
          additionalProperties: {}
        startedAt:
          type: "string"
          format: "date-time"
        endedAt:
          type: "string"
          format: "date-time"
          nullable: true
        runtime:
          type: "integer"
          description: "Calculate the runtime of an execution in seconds.\nIf the\
            \ Execution is not ended, runtime is calculated until now."
          readOnly: true
        trigger:
          type: "string"
          nullable: true
          maxLength: 255
        schedule:
          type: "string"
          format: "uuid"
          nullable: true
        eventTrigger:
          type: "string"
          format: "uuid"
          nullable: true
        task:
          type: "string"
          readOnly: true
        user:
          type: "string"
          nullable: true
          maxLength: 50
        actor:
          type: "string"
          readOnly: true
          maxLength: 36
        title:
          type: "string"
          readOnly: true
        triggerType:
          type: "string"
          readOnly: true
      required:
      - "actor"
      - "runtime"
      - "task"
      - "title"
      - "triggerType"
    ExecutionInputsRequest:
      type: "object"
      properties:
        input:
          type: "object"
          additionalProperties: {}
        params:
          type: "object"
          additionalProperties: {}
        uniqueQualifier:
          type: "string"
          minLength: 1
    ExecutionRequest:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        workflow:
          type: "string"
          format: "uuid"
          nullable: true
          description: "Executed Workflow"
        state:
          enum:
          - "RUNNING"
          - "SUCCESS"
          - "ERROR"
          - "WAITING"
          - "IDLE"
          - "PAUSED"
          - "DELAYED"
          - "CANCELLED"
          type: "string"
          description: "* `RUNNING` - RUNNING\n* `SUCCESS` - SUCCESS\n* `ERROR` -\
            \ ERROR\n* `WAITING` - WAITING\n* `IDLE` - IDLE\n* `PAUSED` - PAUSED\n\
            * `DELAYED` - DELAYED\n* `CANCELLED` - CANCELLED"
        stateInfo:
          type: "string"
          nullable: true
        input:
          type: "object"
          additionalProperties: {}
        params:
          type: "object"
          additionalProperties: {}
        startedAt:
          type: "string"
          format: "date-time"
        endedAt:
          type: "string"
          format: "date-time"
          nullable: true
        trigger:
          type: "string"
          nullable: true
          maxLength: 255
        schedule:
          type: "string"
          format: "uuid"
          nullable: true
        eventTrigger:
          type: "string"
          format: "uuid"
          nullable: true
        user:
          type: "string"
          nullable: true
          maxLength: 50
    FixedOffsetRule:
      title: "FixedOffsetRule"
      type: "object"
      properties:
        rule:
          type: "string"
          format: "uuid4"
        offset:
          description: "Offset days"
          type: "number"
      required:
      - "rule"
      - "offset"
    FixedOffsetRulePreviewRequest:
      title: "FixedOffsetRulePreviewRequest"
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid4"
        count:
          default: 10
          minimum: 0
          maximum: 10
          type: "integer"
        businessCalendar:
          type: "string"
          format: "uuid4"
        ruleType:
          enum:
          - "fixed_offset"
          type: "string"
        fixedOffsetRule:
          $ref: "#/components/schemas/FixedOffsetRule"
      required:
      - "ruleType"
      - "fixedOffsetRule"
    GroupingRule:
      title: "GroupingRule"
      type: "object"
      properties:
        combine:
          type: "array"
          items:
            type: "string"
            format: "uuid4"
        intersect:
          type: "array"
          items:
            type: "string"
            format: "uuid4"
        subtract:
          type: "array"
          items:
            type: "string"
            format: "uuid4"
    GroupingRulePreviewRequest:
      title: "GroupingRulePreviewRequest"
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid4"
        count:
          default: 10
          minimum: 0
          maximum: 10
          type: "integer"
        businessCalendar:
          type: "string"
          format: "uuid4"
        ruleType:
          enum:
          - "grouping"
          type: "string"
        groupingRule:
          $ref: "#/components/schemas/GroupingRule"
      required:
      - "ruleType"
      - "groupingRule"
    Holiday:
      title: "Holiday"
      type: "object"
      properties:
        title:
          type: "string"
        date:
          type: "string"
          format: "date"
      required:
      - "title"
      - "date"
    HolidayResponse:
      type: "object"
      properties:
        count:
          type: "integer"
        results:
          type: "array"
          items: {}
      required:
      - "count"
      - "results"
    Holidays:
      title: "Holidays"
      type: "array"
      items:
        $ref: "#/components/schemas/Holiday"
    IntervalTrigger:
      title: "IntervalTrigger"
      type: "object"
      properties:
        type:
          enum:
          - "interval"
          type: "string"
        intervalMinutes:
          minimum: 1
          maximum: 720
          type: "integer"
        betweenStart:
          pattern: "^([0-1]{1}[0-9]|2[0-3]):[0-5][0-9]$"
          type: "string"
        betweenEnd:
          pattern: "^([0-1]{1}[0-9]|2[0-3]):[0-5][0-9]$"
          type: "string"
      required:
      - "type"
      - "intervalMinutes"
      additionalProperties: false
    MaybeStringArray:
      title: "MaybeStringArray"
      anyOf:
      - type: "string"
      - type: "array"
        items:
          type: "string"
    ModificationInfo:
      type: "object"
      properties:
        createdBy:
          type: "string"
          format: "uuid"
        createdTime:
          type: "string"
          format: "date-time"
        lastModifiedBy:
          type: "string"
          format: "uuid"
        lastModifiedTime:
          type: "string"
          format: "date-time"
      required:
      - "createdBy"
      - "createdTime"
      - "lastModifiedBy"
      - "lastModifiedTime"
    PaginatedBusinessCalendarList:
      type: "object"
      required:
      - "count"
      - "results"
      properties:
        count:
          type: "integer"
          example: 123
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/BusinessCalendar"
    PaginatedChangeHistory:
      type: "object"
      properties:
        count:
          type: "integer"
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/ChangeHistory"
      required:
      - "count"
      - "results"
    PaginatedExecutionList:
      type: "object"
      required:
      - "count"
      - "results"
      properties:
        count:
          type: "integer"
          example: 123
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/Execution"
    PaginatedRuleList:
      type: "object"
      required:
      - "count"
      - "results"
      properties:
        count:
          type: "integer"
          example: 123
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/Rule"
    PaginatedWorkflowList:
      type: "object"
      required:
      - "count"
      - "results"
      properties:
        count:
          type: "integer"
          example: 123
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/Workflow"
    PatchedBusinessCalendarRequest:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        title:
          type: "string"
          minLength: 1
          maxLength: 200
        weekstart:
          type: "integer"
          maximum: 60
          minimum: 1
        weekdays:
          $ref: "#/components/schemas/Weekdays"
        holidays:
          $ref: "#/components/schemas/Holidays"
        validFrom:
          type: "string"
          format: "date"
        validTo:
          type: "string"
          format: "date"
        description:
          type: "string"
    PatchedRuleRequest:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        title:
          type: "string"
          minLength: 1
          maxLength: 200
        ruleType:
          enum:
          - "rrule"
          - "grouping"
          - "fixed_offset"
          - "relative_offset"
          type: "string"
          description: "* `rrule` - rrule\n* `grouping` - grouping\n* `fixed_offset`\
            \ - fixed_offset\n* `relative_offset` - relative_offset"
        rrule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/RRule"
        groupingRule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/GroupingRule"
        fixedOffsetRule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/FixedOffsetRule"
        relativeOffsetRule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/RelativeOffsetRule"
        businessCalendar:
          type: "string"
          format: "uuid"
          nullable: true
        description:
          type: "string"
    PatchedWorkflowRequest:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        title:
          type: "string"
          minLength: 1
          maxLength: 200
        tasks:
          $ref: "#/components/schemas/Tasks"
        taskDefaults:
          type: "object"
          additionalProperties: {}
        description:
          type: "string"
        actor:
          type: "string"
          nullable: true
          maxLength: 36
        owner:
          type: "string"
          format: "uuid"
        ownerType:
          enum:
          - "USER"
          - "GROUP"
          type: "string"
          description: "* `USER` - USER\n* `GROUP` - GROUP"
        isPrivate:
          type: "boolean"
          default: true
        schemaVersion:
          type: "integer"
          maximum: 2147483647
          minimum: -2147483648
        throttle:
          $ref: "#/components/schemas/ThrottleRequest"
        trigger:
          $ref: "#/components/schemas/TriggerRequest"
    PreviewTaskInputRequest:
      type: "object"
      properties:
        expression:
          type: "object"
          additionalProperties: {}
        task:
          type: "string"
          minLength: 1
        workflow:
          $ref: "#/components/schemas/WorkflowRequest"
      required:
      - "expression"
      - "task"
      - "workflow"
    PreviewTaskInputResponse:
      type: "object"
      properties:
        valid:
          type: "boolean"
        value:
          type: "object"
          additionalProperties: {}
        error:
          type: "object"
          additionalProperties: {}
      required:
      - "error"
      - "valid"
      - "value"
    RRule:
      title: "RRule"
      type: "object"
      properties:
        freq:
          enum:
          - "YEARLY"
          - "MONTHLY"
          - "WEEKLY"
          - "DAILY"
          - "HOURLY"
          - "MINUTELY"
          - "SECONDLY"
          type: "string"
        datestart:
          description: "The recurrence start."
          type: "string"
          format: "date"
        interval:
          description: "The interval between each freq iteration."
          default: 1
          minimum: 0
          type: "integer"
        wkst:
          description: "The week start day."
          enum:
          - "MO"
          - "TU"
          - "WE"
          - "TH"
          - "FR"
          - "SA"
          - "SU"
          type: "string"
        until:
          description: "Specifying the upper-bound limit of the recurrence."
          type: "string"
          format: "date-time"
        bysetpos:
          description: "Each given integer will specify an occurrence number, corresponding\
            \ to the nth occurrence of the rule inside the frequency period"
          type: "array"
          items:
            type: "integer"
        bymonth:
          description: "The months to apply the recurrence to."
          type: "array"
          items:
            type: "integer"
        bymonthday:
          description: "The month days to apply the recurrence to."
          type: "array"
          items:
            type: "integer"
        byyearday:
          description: "The year days to apply the recurrence to."
          type: "array"
          items:
            type: "integer"
        byweekno:
          description: "The week numbers to apply the recurrence to."
          type: "array"
          items:
            type: "integer"
        byday:
          description: "Define the weekdays where the recurrence will be applied."
          type: "array"
          items:
            enum:
            - "MO"
            - "TU"
            - "WE"
            - "TH"
            - "FR"
            - "SA"
            - "SU"
            type: "string"
        byworkday:
          enum:
          - "WORKING"
          - "HOLIDAYS"
          - "OFF"
          type: "string"
      required:
      - "freq"
      - "datestart"
    RRulePreviewRequest:
      title: "RRulePreviewRequest"
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid4"
        count:
          default: 10
          minimum: 0
          maximum: 10
          type: "integer"
        businessCalendar:
          type: "string"
          format: "uuid4"
        ruleType:
          enum:
          - "rrule"
          type: "string"
        rrule:
          $ref: "#/components/schemas/RRule"
      required:
      - "ruleType"
      - "rrule"
    RelativeOffsetRule:
      title: "RelativeOffsetRule"
      type: "object"
      properties:
        direction:
          enum:
          - "next"
          - "previous"
          type: "string"
        sourceRule:
          type: "string"
          format: "uuid4"
        targetRule:
          type: "string"
          format: "uuid4"
      required:
      - "direction"
      - "sourceRule"
      - "targetRule"
    RelativeOffsetRulePreviewRequest:
      title: "RelativeOffsetRulePreviewRequest"
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid4"
        count:
          default: 10
          minimum: 0
          maximum: 10
          type: "integer"
        businessCalendar:
          type: "string"
          format: "uuid4"
        ruleType:
          enum:
          - "relative_offset"
          type: "string"
        relativeOffsetRule:
          $ref: "#/components/schemas/RelativeOffsetRule"
      required:
      - "ruleType"
      - "relativeOffsetRule"
    Rule:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        version:
          type: "integer"
          readOnly: true
        title:
          type: "string"
          maxLength: 200
        ruleType:
          enum:
          - "rrule"
          - "grouping"
          - "fixed_offset"
          - "relative_offset"
          type: "string"
          description: "* `rrule` - rrule\n* `grouping` - grouping\n* `fixed_offset`\
            \ - fixed_offset\n* `relative_offset` - relative_offset"
        rrule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/RRule"
        groupingRule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/GroupingRule"
        fixedOffsetRule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/FixedOffsetRule"
        relativeOffsetRule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/RelativeOffsetRule"
        businessCalendar:
          type: "string"
          format: "uuid"
          nullable: true
        description:
          type: "string"
        modificationInfo:
          readOnly: true
          anyOf:
          - $ref: "#/components/schemas/ModificationInfo"
      required:
      - "modificationInfo"
      - "ruleType"
      - "title"
      - "version"
    RulePreviewRequest:
      title: "RulePreviewRequest"
      discriminator:
        propertyName: "ruleType"
        mapping:
          rrule: "#/components/schemas/RRulePreviewRequest"
          grouping: "#/components/schemas/GroupingRulePreviewRequest"
          fixed_offset: "#/components/schemas/FixedOffsetRulePreviewRequest"
          relative_offset: "#/components/schemas/RelativeOffsetRulePreviewRequest"
      oneOf:
      - $ref: "#/components/schemas/RRulePreviewRequest"
      - $ref: "#/components/schemas/GroupingRulePreviewRequest"
      - $ref: "#/components/schemas/FixedOffsetRulePreviewRequest"
      - $ref: "#/components/schemas/RelativeOffsetRulePreviewRequest"
    RulePreviewResponse:
      title: "RulePreviewResponse"
      type: "object"
      properties:
        nextExecutions:
          type: "array"
          items:
            type: "string"
            format: "date-time"
        valid:
          type: "boolean"
        error:
          type: "string"
      required:
      - "nextExecutions"
      - "valid"
      - "error"
    RuleRequest:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        title:
          type: "string"
          minLength: 1
          maxLength: 200
        ruleType:
          enum:
          - "rrule"
          - "grouping"
          - "fixed_offset"
          - "relative_offset"
          type: "string"
          description: "* `rrule` - rrule\n* `grouping` - grouping\n* `fixed_offset`\
            \ - fixed_offset\n* `relative_offset` - relative_offset"
        rrule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/RRule"
        groupingRule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/GroupingRule"
        fixedOffsetRule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/FixedOffsetRule"
        relativeOffsetRule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/RelativeOffsetRule"
        businessCalendar:
          type: "string"
          format: "uuid"
          nullable: true
        description:
          type: "string"
      required:
      - "ruleType"
      - "title"
    Schedule:
      type: "object"
      properties:
        isActive:
          type: "boolean"
        isFaulty:
          type: "boolean"
          readOnly: true
        trigger:
          $ref: "#/components/schemas/ScheduleTrigger"
        rule:
          type: "string"
          format: "uuid"
          nullable: true
        filterParameters:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/ScheduleFilterParameters"
        timezone:
          enum:
          - "Africa/Abidjan"
          - "Africa/Accra"
          - "Africa/Addis_Ababa"
          - "Africa/Algiers"
          - "Africa/Asmara"
          - "Africa/Asmera"
          - "Africa/Bamako"
          - "Africa/Bangui"
          - "Africa/Banjul"
          - "Africa/Bissau"
          - "Africa/Blantyre"
          - "Africa/Brazzaville"
          - "Africa/Bujumbura"
          - "Africa/Cairo"
          - "Africa/Casablanca"
          - "Africa/Ceuta"
          - "Africa/Conakry"
          - "Africa/Dakar"
          - "Africa/Dar_es_Salaam"
          - "Africa/Djibouti"
          - "Africa/Douala"
          - "Africa/El_Aaiun"
          - "Africa/Freetown"
          - "Africa/Gaborone"
          - "Africa/Harare"
          - "Africa/Johannesburg"
          - "Africa/Juba"
          - "Africa/Kampala"
          - "Africa/Khartoum"
          - "Africa/Kigali"
          - "Africa/Kinshasa"
          - "Africa/Lagos"
          - "Africa/Libreville"
          - "Africa/Lome"
          - "Africa/Luanda"
          - "Africa/Lubumbashi"
          - "Africa/Lusaka"
          - "Africa/Malabo"
          - "Africa/Maputo"
          - "Africa/Maseru"
          - "Africa/Mbabane"
          - "Africa/Mogadishu"
          - "Africa/Monrovia"
          - "Africa/Nairobi"
          - "Africa/Ndjamena"
          - "Africa/Niamey"
          - "Africa/Nouakchott"
          - "Africa/Ouagadougou"
          - "Africa/Porto-Novo"
          - "Africa/Sao_Tome"
          - "Africa/Timbuktu"
          - "Africa/Tripoli"
          - "Africa/Tunis"
          - "Africa/Windhoek"
          - "America/Adak"
          - "America/Anchorage"
          - "America/Anguilla"
          - "America/Antigua"
          - "America/Araguaina"
          - "America/Argentina/Buenos_Aires"
          - "America/Argentina/Catamarca"
          - "America/Argentina/ComodRivadavia"
          - "America/Argentina/Cordoba"
          - "America/Argentina/Jujuy"
          - "America/Argentina/La_Rioja"
          - "America/Argentina/Mendoza"
          - "America/Argentina/Rio_Gallegos"
          - "America/Argentina/Salta"
          - "America/Argentina/San_Juan"
          - "America/Argentina/San_Luis"
          - "America/Argentina/Tucuman"
          - "America/Argentina/Ushuaia"
          - "America/Aruba"
          - "America/Asuncion"
          - "America/Atikokan"
          - "America/Atka"
          - "America/Bahia"
          - "America/Bahia_Banderas"
          - "America/Barbados"
          - "America/Belem"
          - "America/Belize"
          - "America/Blanc-Sablon"
          - "America/Boa_Vista"
          - "America/Bogota"
          - "America/Boise"
          - "America/Buenos_Aires"
          - "America/Cambridge_Bay"
          - "America/Campo_Grande"
          - "America/Cancun"
          - "America/Caracas"
          - "America/Catamarca"
          - "America/Cayenne"
          - "America/Cayman"
          - "America/Chicago"
          - "America/Chihuahua"
          - "America/Coral_Harbour"
          - "America/Cordoba"
          - "America/Costa_Rica"
          - "America/Creston"
          - "America/Cuiaba"
          - "America/Curacao"
          - "America/Danmarkshavn"
          - "America/Dawson"
          - "America/Dawson_Creek"
          - "America/Denver"
          - "America/Detroit"
          - "America/Dominica"
          - "America/Edmonton"
          - "America/Eirunepe"
          - "America/El_Salvador"
          - "America/Ensenada"
          - "America/Fort_Nelson"
          - "America/Fort_Wayne"
          - "America/Fortaleza"
          - "America/Glace_Bay"
          - "America/Godthab"
          - "America/Goose_Bay"
          - "America/Grand_Turk"
          - "America/Grenada"
          - "America/Guadeloupe"
          - "America/Guatemala"
          - "America/Guayaquil"
          - "America/Guyana"
          - "America/Halifax"
          - "America/Havana"
          - "America/Hermosillo"
          - "America/Indiana/Indianapolis"
          - "America/Indiana/Knox"
          - "America/Indiana/Marengo"
          - "America/Indiana/Petersburg"
          - "America/Indiana/Tell_City"
          - "America/Indiana/Vevay"
          - "America/Indiana/Vincennes"
          - "America/Indiana/Winamac"
          - "America/Indianapolis"
          - "America/Inuvik"
          - "America/Iqaluit"
          - "America/Jamaica"
          - "America/Jujuy"
          - "America/Juneau"
          - "America/Kentucky/Louisville"
          - "America/Kentucky/Monticello"
          - "America/Knox_IN"
          - "America/Kralendijk"
          - "America/La_Paz"
          - "America/Lima"
          - "America/Los_Angeles"
          - "America/Louisville"
          - "America/Lower_Princes"
          - "America/Maceio"
          - "America/Managua"
          - "America/Manaus"
          - "America/Marigot"
          - "America/Martinique"
          - "America/Matamoros"
          - "America/Mazatlan"
          - "America/Mendoza"
          - "America/Menominee"
          - "America/Merida"
          - "America/Metlakatla"
          - "America/Mexico_City"
          - "America/Miquelon"
          - "America/Moncton"
          - "America/Monterrey"
          - "America/Montevideo"
          - "America/Montreal"
          - "America/Montserrat"
          - "America/Nassau"
          - "America/New_York"
          - "America/Nipigon"
          - "America/Nome"
          - "America/Noronha"
          - "America/North_Dakota/Beulah"
          - "America/North_Dakota/Center"
          - "America/North_Dakota/New_Salem"
          - "America/Nuuk"
          - "America/Ojinaga"
          - "America/Panama"
          - "America/Pangnirtung"
          - "America/Paramaribo"
          - "America/Phoenix"
          - "America/Port-au-Prince"
          - "America/Port_of_Spain"
          - "America/Porto_Acre"
          - "America/Porto_Velho"
          - "America/Puerto_Rico"
          - "America/Punta_Arenas"
          - "America/Rainy_River"
          - "America/Rankin_Inlet"
          - "America/Recife"
          - "America/Regina"
          - "America/Resolute"
          - "America/Rio_Branco"
          - "America/Rosario"
          - "America/Santa_Isabel"
          - "America/Santarem"
          - "America/Santiago"
          - "America/Santo_Domingo"
          - "America/Sao_Paulo"
          - "America/Scoresbysund"
          - "America/Shiprock"
          - "America/Sitka"
          - "America/St_Barthelemy"
          - "America/St_Johns"
          - "America/St_Kitts"
          - "America/St_Lucia"
          - "America/St_Thomas"
          - "America/St_Vincent"
          - "America/Swift_Current"
          - "America/Tegucigalpa"
          - "America/Thule"
          - "America/Thunder_Bay"
          - "America/Tijuana"
          - "America/Toronto"
          - "America/Tortola"
          - "America/Vancouver"
          - "America/Virgin"
          - "America/Whitehorse"
          - "America/Winnipeg"
          - "America/Yakutat"
          - "America/Yellowknife"
          - "Antarctica/Casey"
          - "Antarctica/Davis"
          - "Antarctica/DumontDUrville"
          - "Antarctica/Macquarie"
          - "Antarctica/Mawson"
          - "Antarctica/McMurdo"
          - "Antarctica/Palmer"
          - "Antarctica/Rothera"
          - "Antarctica/South_Pole"
          - "Antarctica/Syowa"
          - "Antarctica/Troll"
          - "Antarctica/Vostok"
          - "Arctic/Longyearbyen"
          - "Asia/Aden"
          - "Asia/Almaty"
          - "Asia/Amman"
          - "Asia/Anadyr"
          - "Asia/Aqtau"
          - "Asia/Aqtobe"
          - "Asia/Ashgabat"
          - "Asia/Ashkhabad"
          - "Asia/Atyrau"
          - "Asia/Baghdad"
          - "Asia/Bahrain"
          - "Asia/Baku"
          - "Asia/Bangkok"
          - "Asia/Barnaul"
          - "Asia/Beirut"
          - "Asia/Bishkek"
          - "Asia/Brunei"
          - "Asia/Calcutta"
          - "Asia/Chita"
          - "Asia/Choibalsan"
          - "Asia/Chongqing"
          - "Asia/Chungking"
          - "Asia/Colombo"
          - "Asia/Dacca"
          - "Asia/Damascus"
          - "Asia/Dhaka"
          - "Asia/Dili"
          - "Asia/Dubai"
          - "Asia/Dushanbe"
          - "Asia/Famagusta"
          - "Asia/Gaza"
          - "Asia/Harbin"
          - "Asia/Hebron"
          - "Asia/Ho_Chi_Minh"
          - "Asia/Hong_Kong"
          - "Asia/Hovd"
          - "Asia/Irkutsk"
          - "Asia/Istanbul"
          - "Asia/Jakarta"
          - "Asia/Jayapura"
          - "Asia/Jerusalem"
          - "Asia/Kabul"
          - "Asia/Kamchatka"
          - "Asia/Karachi"
          - "Asia/Kashgar"
          - "Asia/Kathmandu"
          - "Asia/Katmandu"
          - "Asia/Khandyga"
          - "Asia/Kolkata"
          - "Asia/Krasnoyarsk"
          - "Asia/Kuala_Lumpur"
          - "Asia/Kuching"
          - "Asia/Kuwait"
          - "Asia/Macao"
          - "Asia/Macau"
          - "Asia/Magadan"
          - "Asia/Makassar"
          - "Asia/Manila"
          - "Asia/Muscat"
          - "Asia/Nicosia"
          - "Asia/Novokuznetsk"
          - "Asia/Novosibirsk"
          - "Asia/Omsk"
          - "Asia/Oral"
          - "Asia/Phnom_Penh"
          - "Asia/Pontianak"
          - "Asia/Pyongyang"
          - "Asia/Qatar"
          - "Asia/Qostanay"
          - "Asia/Qyzylorda"
          - "Asia/Rangoon"
          - "Asia/Riyadh"
          - "Asia/Saigon"
          - "Asia/Sakhalin"
          - "Asia/Samarkand"
          - "Asia/Seoul"
          - "Asia/Shanghai"
          - "Asia/Singapore"
          - "Asia/Srednekolymsk"
          - "Asia/Taipei"
          - "Asia/Tashkent"
          - "Asia/Tbilisi"
          - "Asia/Tehran"
          - "Asia/Tel_Aviv"
          - "Asia/Thimbu"
          - "Asia/Thimphu"
          - "Asia/Tokyo"
          - "Asia/Tomsk"
          - "Asia/Ujung_Pandang"
          - "Asia/Ulaanbaatar"
          - "Asia/Ulan_Bator"
          - "Asia/Urumqi"
          - "Asia/Ust-Nera"
          - "Asia/Vientiane"
          - "Asia/Vladivostok"
          - "Asia/Yakutsk"
          - "Asia/Yangon"
          - "Asia/Yekaterinburg"
          - "Asia/Yerevan"
          - "Atlantic/Azores"
          - "Atlantic/Bermuda"
          - "Atlantic/Canary"
          - "Atlantic/Cape_Verde"
          - "Atlantic/Faeroe"
          - "Atlantic/Faroe"
          - "Atlantic/Jan_Mayen"
          - "Atlantic/Madeira"
          - "Atlantic/Reykjavik"
          - "Atlantic/South_Georgia"
          - "Atlantic/St_Helena"
          - "Atlantic/Stanley"
          - "Australia/ACT"
          - "Australia/Adelaide"
          - "Australia/Brisbane"
          - "Australia/Broken_Hill"
          - "Australia/Canberra"
          - "Australia/Currie"
          - "Australia/Darwin"
          - "Australia/Eucla"
          - "Australia/Hobart"
          - "Australia/LHI"
          - "Australia/Lindeman"
          - "Australia/Lord_Howe"
          - "Australia/Melbourne"
          - "Australia/NSW"
          - "Australia/North"
          - "Australia/Perth"
          - "Australia/Queensland"
          - "Australia/South"
          - "Australia/Sydney"
          - "Australia/Tasmania"
          - "Australia/Victoria"
          - "Australia/West"
          - "Australia/Yancowinna"
          - "Brazil/Acre"
          - "Brazil/DeNoronha"
          - "Brazil/East"
          - "Brazil/West"
          - "CET"
          - "CST6CDT"
          - "Canada/Atlantic"
          - "Canada/Central"
          - "Canada/Eastern"
          - "Canada/Mountain"
          - "Canada/Newfoundland"
          - "Canada/Pacific"
          - "Canada/Saskatchewan"
          - "Canada/Yukon"
          - "Chile/Continental"
          - "Chile/EasterIsland"
          - "Cuba"
          - "EET"
          - "EST"
          - "EST5EDT"
          - "Egypt"
          - "Eire"
          - "Etc/GMT"
          - "Etc/GMT+0"
          - "Etc/GMT+1"
          - "Etc/GMT+10"
          - "Etc/GMT+11"
          - "Etc/GMT+12"
          - "Etc/GMT+2"
          - "Etc/GMT+3"
          - "Etc/GMT+4"
          - "Etc/GMT+5"
          - "Etc/GMT+6"
          - "Etc/GMT+7"
          - "Etc/GMT+8"
          - "Etc/GMT+9"
          - "Etc/GMT-0"
          - "Etc/GMT-1"
          - "Etc/GMT-10"
          - "Etc/GMT-11"
          - "Etc/GMT-12"
          - "Etc/GMT-13"
          - "Etc/GMT-14"
          - "Etc/GMT-2"
          - "Etc/GMT-3"
          - "Etc/GMT-4"
          - "Etc/GMT-5"
          - "Etc/GMT-6"
          - "Etc/GMT-7"
          - "Etc/GMT-8"
          - "Etc/GMT-9"
          - "Etc/GMT0"
          - "Etc/Greenwich"
          - "Etc/UCT"
          - "Etc/UTC"
          - "Etc/Universal"
          - "Etc/Zulu"
          - "Europe/Amsterdam"
          - "Europe/Andorra"
          - "Europe/Astrakhan"
          - "Europe/Athens"
          - "Europe/Belfast"
          - "Europe/Belgrade"
          - "Europe/Berlin"
          - "Europe/Bratislava"
          - "Europe/Brussels"
          - "Europe/Bucharest"
          - "Europe/Budapest"
          - "Europe/Busingen"
          - "Europe/Chisinau"
          - "Europe/Copenhagen"
          - "Europe/Dublin"
          - "Europe/Gibraltar"
          - "Europe/Guernsey"
          - "Europe/Helsinki"
          - "Europe/Isle_of_Man"
          - "Europe/Istanbul"
          - "Europe/Jersey"
          - "Europe/Kaliningrad"
          - "Europe/Kiev"
          - "Europe/Kirov"
          - "Europe/Lisbon"
          - "Europe/Ljubljana"
          - "Europe/London"
          - "Europe/Luxembourg"
          - "Europe/Madrid"
          - "Europe/Malta"
          - "Europe/Mariehamn"
          - "Europe/Minsk"
          - "Europe/Monaco"
          - "Europe/Moscow"
          - "Europe/Nicosia"
          - "Europe/Oslo"
          - "Europe/Paris"
          - "Europe/Podgorica"
          - "Europe/Prague"
          - "Europe/Riga"
          - "Europe/Rome"
          - "Europe/Samara"
          - "Europe/San_Marino"
          - "Europe/Sarajevo"
          - "Europe/Saratov"
          - "Europe/Simferopol"
          - "Europe/Skopje"
          - "Europe/Sofia"
          - "Europe/Stockholm"
          - "Europe/Tallinn"
          - "Europe/Tirane"
          - "Europe/Tiraspol"
          - "Europe/Ulyanovsk"
          - "Europe/Uzhgorod"
          - "Europe/Vaduz"
          - "Europe/Vatican"
          - "Europe/Vienna"
          - "Europe/Vilnius"
          - "Europe/Volgograd"
          - "Europe/Warsaw"
          - "Europe/Zagreb"
          - "Europe/Zaporozhye"
          - "Europe/Zurich"
          - "GB"
          - "GB-Eire"
          - "GMT"
          - "GMT+0"
          - "GMT-0"
          - "GMT0"
          - "Greenwich"
          - "HST"
          - "Hongkong"
          - "Iceland"
          - "Indian/Antananarivo"
          - "Indian/Chagos"
          - "Indian/Christmas"
          - "Indian/Cocos"
          - "Indian/Comoro"
          - "Indian/Kerguelen"
          - "Indian/Mahe"
          - "Indian/Maldives"
          - "Indian/Mauritius"
          - "Indian/Mayotte"
          - "Indian/Reunion"
          - "Iran"
          - "Israel"
          - "Jamaica"
          - "Japan"
          - "Kwajalein"
          - "Libya"
          - "MET"
          - "MST"
          - "MST7MDT"
          - "Mexico/BajaNorte"
          - "Mexico/BajaSur"
          - "Mexico/General"
          - "NZ"
          - "NZ-CHAT"
          - "Navajo"
          - "PRC"
          - "PST8PDT"
          - "Pacific/Apia"
          - "Pacific/Auckland"
          - "Pacific/Bougainville"
          - "Pacific/Chatham"
          - "Pacific/Chuuk"
          - "Pacific/Easter"
          - "Pacific/Efate"
          - "Pacific/Enderbury"
          - "Pacific/Fakaofo"
          - "Pacific/Fiji"
          - "Pacific/Funafuti"
          - "Pacific/Galapagos"
          - "Pacific/Gambier"
          - "Pacific/Guadalcanal"
          - "Pacific/Guam"
          - "Pacific/Honolulu"
          - "Pacific/Johnston"
          - "Pacific/Kiritimati"
          - "Pacific/Kosrae"
          - "Pacific/Kwajalein"
          - "Pacific/Majuro"
          - "Pacific/Marquesas"
          - "Pacific/Midway"
          - "Pacific/Nauru"
          - "Pacific/Niue"
          - "Pacific/Norfolk"
          - "Pacific/Noumea"
          - "Pacific/Pago_Pago"
          - "Pacific/Palau"
          - "Pacific/Pitcairn"
          - "Pacific/Pohnpei"
          - "Pacific/Ponape"
          - "Pacific/Port_Moresby"
          - "Pacific/Rarotonga"
          - "Pacific/Saipan"
          - "Pacific/Samoa"
          - "Pacific/Tahiti"
          - "Pacific/Tarawa"
          - "Pacific/Tongatapu"
          - "Pacific/Truk"
          - "Pacific/Wake"
          - "Pacific/Wallis"
          - "Pacific/Yap"
          - "Poland"
          - "Portugal"
          - "ROC"
          - "ROK"
          - "Singapore"
          - "Turkey"
          - "UCT"
          - "US/Alaska"
          - "US/Aleutian"
          - "US/Arizona"
          - "US/Central"
          - "US/East-Indiana"
          - "US/Eastern"
          - "US/Hawaii"
          - "US/Indiana-Starke"
          - "US/Michigan"
          - "US/Mountain"
          - "US/Pacific"
          - "US/Samoa"
          - "UTC"
          - "Universal"
          - "W-SU"
          - "WET"
          - "Zulu"
          type: "string"
          description: "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n\
            * `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n\
            * `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n\
            * `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n\
            * `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n\
            * `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n\
            * `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n\
            * `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n\
            * `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n\
            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` -\
            \ Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun`\
            \ - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone`\
            \ - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg`\
            \ - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala`\
            \ - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali`\
            \ - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos`\
            \ - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome`\
            \ - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi`\
            \ - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo`\
            \ - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru`\
            \ - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu`\
            \ - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi`\
            \ - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey`\
            \ - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou`\
            \ - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome`\
            \ - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli`\
            \ - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek`\
            \ - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage`\
            \ - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua`\
            \ - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires`\
            \ - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` -\
            \ America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` -\
            \ America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n\
            * `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja`\
            \ - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n\
            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n\
            * `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan`\
            \ - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n\
            * `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia`\
            \ - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion`\
            \ - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka`\
            \ - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas`\
            \ - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n\
            * `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n\
            * `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista`\
            \ - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise`\
            \ - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n*\
            \ `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande`\
            \ - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas`\
            \ - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne`\
            \ - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago`\
            \ - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Coral_Harbour`\
            \ - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica`\
            \ - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba`\
            \ - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn`\
            \ - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek`\
            \ - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit`\
            \ - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton`\
            \ - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador`\
            \ - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson`\
            \ - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n\
            * `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n\
            * `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n\
            * `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n\
            * `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n\
            * `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n\
            * `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n\
            * `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis`\
            \ - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n\
            * `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg`\
            \ - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n\
            * `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes`\
            \ - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n\
            * `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` -\
            \ America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica`\
            \ - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau`\
            \ - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n\
            * `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN`\
            \ - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz`\
            \ - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles`\
            \ - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n\
            * `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio`\
            \ - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus`\
            \ - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique`\
            \ - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan`\
            \ - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee`\
            \ - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla`\
            \ - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n\
            * `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n\
            * `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n\
            * `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n\
            * `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n\
            * `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n\
            * `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah`\
            \ - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n\
            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n\
            * `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n\
            * `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n\
            * `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n\
            * `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain`\
            \ - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n\
            * `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico`\
            \ - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n\
            * `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet`\
            \ - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina`\
            \ - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco`\
            \ - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel`\
            \ - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago`\
            \ - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n\
            * `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` -\
            \ America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka`\
            \ - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n\
            * `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n\
            * `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n\
            * `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current`\
            \ - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n\
            * `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n\
            * `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n\
            * `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n\
            * `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n\
            * `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n\
            * `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` -\
            \ Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville`\
            \ - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n\
            * `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n\
            * `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n\
            * `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa`\
            \ - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok`\
            \ - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n\
            * `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman`\
            \ - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n\
            * `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad`\
            \ - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` -\
            \ Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n\
            * `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut`\
            \ - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n\
            * `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan`\
            \ - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking`\
            \ - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` -\
            \ Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n\
            * `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe`\
            \ - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza`\
            \ - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n\
            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n\
            * `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul`\
            \ - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura`\
            \ - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul`\
            \ - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi`\
            \ - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu`\
            \ - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga`\
            \ - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk`\
            \ - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching`\
            \ - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n\
            * `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar`\
            \ - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n\
            * `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n\
            * `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n*\
            \ `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak`\
            \ - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar`\
            \ - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda`\
            \ - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` -\
            \ Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n\
            * `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai`\
            \ - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk`\
            \ - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent`\
            \ - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` -\
            \ Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n\
            * `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk`\
            \ - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar`\
            \ - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi`\
            \ - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane`\
            \ - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk`\
            \ - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg`\
            \ - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores`\
            \ - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary`\
            \ - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n*\
            \ `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n\
            * `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n\
            * `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia`\
            \ - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n\
            * `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n\
            * `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` -\
            \ Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n\
            * `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n\
            * `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n\
            * `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n\
            * `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` -\
            \ Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n\
            * `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n\
            * `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n\
            * `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n\
            * `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` -\
            \ Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna`\
            \ - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha`\
            \ - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` -\
            \ Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic`\
            \ - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern`\
            \ - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland`\
            \ - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan`\
            \ - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental`\
            \ - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n*\
            \ `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n\
            * `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0`\
            \ - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n\
            * `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2`\
            \ - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n\
            * `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` -\
            \ Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0`\
            \ - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n\
            * `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13`\
            \ - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n\
            * `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` -\
            \ Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8`\
            \ - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich`\
            \ - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal`\
            \ - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n\
            * `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n\
            * `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n\
            * `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n\
            * `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n\
            * `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n\
            * `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n\
            * `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n\
            * `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n\
            * `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n\
            * `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n\
            * `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n\
            * `Europe/Kirov` - Europe/Kirov\n* `Europe/Lisbon` - Europe/Lisbon\n*\
            \ `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n\
            * `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n\
            * `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n\
            * `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n*\
            \ `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n\
            * `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica`\
            \ - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga`\
            \ - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n\
            * `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n\
            * `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n\
            * `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n*\
            \ `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n\
            * `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n\
            * `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n\
            * `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n\
            * `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n\
            * `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n\
            * `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n\
            * `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n\
            * `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n\
            * `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland`\
            \ - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos`\
            \ - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos`\
            \ - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen`\
            \ - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives`\
            \ - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte`\
            \ - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n\
            * `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein`\
            \ - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT`\
            \ - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur`\
            \ - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n\
            * `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT`\
            \ - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n\
            * `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` -\
            \ Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter`\
            \ - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury`\
            \ - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji`\
            \ - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos`\
            \ - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal`\
            \ - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu`\
            \ - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kiritimati`\
            \ - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein`\
            \ - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas`\
            \ - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru`\
            \ - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk`\
            \ - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago`\
            \ - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn`\
            \ - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape`\
            \ - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n\
            * `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n\
            * `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n\
            * `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n\
            * `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis`\
            \ - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n\
            * `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` -\
            \ Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n\
            * `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central`\
            \ - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern`\
            \ - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n\
            * `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific`\
            \ - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal`\
            \ - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"
        inputs:
          $ref: "#/components/schemas/ScheduleInputs"
        nextExecution:
          type: "string"
          format: "date-time"
          nullable: true
      required:
      - "isFaulty"
      - "trigger"
    ScheduleFilterParameters:
      title: "ScheduleFilterParameters"
      type: "object"
      properties:
        count:
          default: 10
          minimum: 1
          type: "integer"
        earliestStart:
          type: "string"
          format: "date"
        earliestStartTime:
          default: "00:00:00"
          type: "string"
          format: "time"
        until:
          type: "string"
          format: "date"
        includeDates:
          type: "array"
          items:
            type: "string"
            format: "date"
        excludeDates:
          type: "array"
          items:
            type: "string"
            format: "date"
    ScheduleInput:
      title: "ScheduleInput"
      type: "object"
      properties:
        type:
          enum:
          - "static"
          type: "string"
        value:
          anyOf:
          - type: "string"
          - type: "integer"
          - type: "number"
      required:
      - "type"
      - "value"
    ScheduleInputs:
      title: "ScheduleInputs"
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/ScheduleInput"
    SchedulePreviewRequest:
      type: "object"
      properties:
        schedule:
          $ref: "#/components/schemas/ScheduleRequest"
      required:
      - "schedule"
    SchedulePreviewResponse:
      title: "SchedulePreviewResponse"
      type: "object"
      properties:
        nextExecutions:
          type: "array"
          items:
            type: "string"
            format: "date-time"
        valid:
          type: "boolean"
        error:
          type: "string"
      required:
      - "nextExecutions"
      - "valid"
      - "error"
    ScheduleRequest:
      type: "object"
      properties:
        isActive:
          type: "boolean"
        trigger:
          $ref: "#/components/schemas/ScheduleTrigger"
        rule:
          type: "string"
          format: "uuid"
          nullable: true
        filterParameters:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/ScheduleFilterParameters"
        timezone:
          enum:
          - "Africa/Abidjan"
          - "Africa/Accra"
          - "Africa/Addis_Ababa"
          - "Africa/Algiers"
          - "Africa/Asmara"
          - "Africa/Asmera"
          - "Africa/Bamako"
          - "Africa/Bangui"
          - "Africa/Banjul"
          - "Africa/Bissau"
          - "Africa/Blantyre"
          - "Africa/Brazzaville"
          - "Africa/Bujumbura"
          - "Africa/Cairo"
          - "Africa/Casablanca"
          - "Africa/Ceuta"
          - "Africa/Conakry"
          - "Africa/Dakar"
          - "Africa/Dar_es_Salaam"
          - "Africa/Djibouti"
          - "Africa/Douala"
          - "Africa/El_Aaiun"
          - "Africa/Freetown"
          - "Africa/Gaborone"
          - "Africa/Harare"
          - "Africa/Johannesburg"
          - "Africa/Juba"
          - "Africa/Kampala"
          - "Africa/Khartoum"
          - "Africa/Kigali"
          - "Africa/Kinshasa"
          - "Africa/Lagos"
          - "Africa/Libreville"
          - "Africa/Lome"
          - "Africa/Luanda"
          - "Africa/Lubumbashi"
          - "Africa/Lusaka"
          - "Africa/Malabo"
          - "Africa/Maputo"
          - "Africa/Maseru"
          - "Africa/Mbabane"
          - "Africa/Mogadishu"
          - "Africa/Monrovia"
          - "Africa/Nairobi"
          - "Africa/Ndjamena"
          - "Africa/Niamey"
          - "Africa/Nouakchott"
          - "Africa/Ouagadougou"
          - "Africa/Porto-Novo"
          - "Africa/Sao_Tome"
          - "Africa/Timbuktu"
          - "Africa/Tripoli"
          - "Africa/Tunis"
          - "Africa/Windhoek"
          - "America/Adak"
          - "America/Anchorage"
          - "America/Anguilla"
          - "America/Antigua"
          - "America/Araguaina"
          - "America/Argentina/Buenos_Aires"
          - "America/Argentina/Catamarca"
          - "America/Argentina/ComodRivadavia"
          - "America/Argentina/Cordoba"
          - "America/Argentina/Jujuy"
          - "America/Argentina/La_Rioja"
          - "America/Argentina/Mendoza"
          - "America/Argentina/Rio_Gallegos"
          - "America/Argentina/Salta"
          - "America/Argentina/San_Juan"
          - "America/Argentina/San_Luis"
          - "America/Argentina/Tucuman"
          - "America/Argentina/Ushuaia"
          - "America/Aruba"
          - "America/Asuncion"
          - "America/Atikokan"
          - "America/Atka"
          - "America/Bahia"
          - "America/Bahia_Banderas"
          - "America/Barbados"
          - "America/Belem"
          - "America/Belize"
          - "America/Blanc-Sablon"
          - "America/Boa_Vista"
          - "America/Bogota"
          - "America/Boise"
          - "America/Buenos_Aires"
          - "America/Cambridge_Bay"
          - "America/Campo_Grande"
          - "America/Cancun"
          - "America/Caracas"
          - "America/Catamarca"
          - "America/Cayenne"
          - "America/Cayman"
          - "America/Chicago"
          - "America/Chihuahua"
          - "America/Coral_Harbour"
          - "America/Cordoba"
          - "America/Costa_Rica"
          - "America/Creston"
          - "America/Cuiaba"
          - "America/Curacao"
          - "America/Danmarkshavn"
          - "America/Dawson"
          - "America/Dawson_Creek"
          - "America/Denver"
          - "America/Detroit"
          - "America/Dominica"
          - "America/Edmonton"
          - "America/Eirunepe"
          - "America/El_Salvador"
          - "America/Ensenada"
          - "America/Fort_Nelson"
          - "America/Fort_Wayne"
          - "America/Fortaleza"
          - "America/Glace_Bay"
          - "America/Godthab"
          - "America/Goose_Bay"
          - "America/Grand_Turk"
          - "America/Grenada"
          - "America/Guadeloupe"
          - "America/Guatemala"
          - "America/Guayaquil"
          - "America/Guyana"
          - "America/Halifax"
          - "America/Havana"
          - "America/Hermosillo"
          - "America/Indiana/Indianapolis"
          - "America/Indiana/Knox"
          - "America/Indiana/Marengo"
          - "America/Indiana/Petersburg"
          - "America/Indiana/Tell_City"
          - "America/Indiana/Vevay"
          - "America/Indiana/Vincennes"
          - "America/Indiana/Winamac"
          - "America/Indianapolis"
          - "America/Inuvik"
          - "America/Iqaluit"
          - "America/Jamaica"
          - "America/Jujuy"
          - "America/Juneau"
          - "America/Kentucky/Louisville"
          - "America/Kentucky/Monticello"
          - "America/Knox_IN"
          - "America/Kralendijk"
          - "America/La_Paz"
          - "America/Lima"
          - "America/Los_Angeles"
          - "America/Louisville"
          - "America/Lower_Princes"
          - "America/Maceio"
          - "America/Managua"
          - "America/Manaus"
          - "America/Marigot"
          - "America/Martinique"
          - "America/Matamoros"
          - "America/Mazatlan"
          - "America/Mendoza"
          - "America/Menominee"
          - "America/Merida"
          - "America/Metlakatla"
          - "America/Mexico_City"
          - "America/Miquelon"
          - "America/Moncton"
          - "America/Monterrey"
          - "America/Montevideo"
          - "America/Montreal"
          - "America/Montserrat"
          - "America/Nassau"
          - "America/New_York"
          - "America/Nipigon"
          - "America/Nome"
          - "America/Noronha"
          - "America/North_Dakota/Beulah"
          - "America/North_Dakota/Center"
          - "America/North_Dakota/New_Salem"
          - "America/Nuuk"
          - "America/Ojinaga"
          - "America/Panama"
          - "America/Pangnirtung"
          - "America/Paramaribo"
          - "America/Phoenix"
          - "America/Port-au-Prince"
          - "America/Port_of_Spain"
          - "America/Porto_Acre"
          - "America/Porto_Velho"
          - "America/Puerto_Rico"
          - "America/Punta_Arenas"
          - "America/Rainy_River"
          - "America/Rankin_Inlet"
          - "America/Recife"
          - "America/Regina"
          - "America/Resolute"
          - "America/Rio_Branco"
          - "America/Rosario"
          - "America/Santa_Isabel"
          - "America/Santarem"
          - "America/Santiago"
          - "America/Santo_Domingo"
          - "America/Sao_Paulo"
          - "America/Scoresbysund"
          - "America/Shiprock"
          - "America/Sitka"
          - "America/St_Barthelemy"
          - "America/St_Johns"
          - "America/St_Kitts"
          - "America/St_Lucia"
          - "America/St_Thomas"
          - "America/St_Vincent"
          - "America/Swift_Current"
          - "America/Tegucigalpa"
          - "America/Thule"
          - "America/Thunder_Bay"
          - "America/Tijuana"
          - "America/Toronto"
          - "America/Tortola"
          - "America/Vancouver"
          - "America/Virgin"
          - "America/Whitehorse"
          - "America/Winnipeg"
          - "America/Yakutat"
          - "America/Yellowknife"
          - "Antarctica/Casey"
          - "Antarctica/Davis"
          - "Antarctica/DumontDUrville"
          - "Antarctica/Macquarie"
          - "Antarctica/Mawson"
          - "Antarctica/McMurdo"
          - "Antarctica/Palmer"
          - "Antarctica/Rothera"
          - "Antarctica/South_Pole"
          - "Antarctica/Syowa"
          - "Antarctica/Troll"
          - "Antarctica/Vostok"
          - "Arctic/Longyearbyen"
          - "Asia/Aden"
          - "Asia/Almaty"
          - "Asia/Amman"
          - "Asia/Anadyr"
          - "Asia/Aqtau"
          - "Asia/Aqtobe"
          - "Asia/Ashgabat"
          - "Asia/Ashkhabad"
          - "Asia/Atyrau"
          - "Asia/Baghdad"
          - "Asia/Bahrain"
          - "Asia/Baku"
          - "Asia/Bangkok"
          - "Asia/Barnaul"
          - "Asia/Beirut"
          - "Asia/Bishkek"
          - "Asia/Brunei"
          - "Asia/Calcutta"
          - "Asia/Chita"
          - "Asia/Choibalsan"
          - "Asia/Chongqing"
          - "Asia/Chungking"
          - "Asia/Colombo"
          - "Asia/Dacca"
          - "Asia/Damascus"
          - "Asia/Dhaka"
          - "Asia/Dili"
          - "Asia/Dubai"
          - "Asia/Dushanbe"
          - "Asia/Famagusta"
          - "Asia/Gaza"
          - "Asia/Harbin"
          - "Asia/Hebron"
          - "Asia/Ho_Chi_Minh"
          - "Asia/Hong_Kong"
          - "Asia/Hovd"
          - "Asia/Irkutsk"
          - "Asia/Istanbul"
          - "Asia/Jakarta"
          - "Asia/Jayapura"
          - "Asia/Jerusalem"
          - "Asia/Kabul"
          - "Asia/Kamchatka"
          - "Asia/Karachi"
          - "Asia/Kashgar"
          - "Asia/Kathmandu"
          - "Asia/Katmandu"
          - "Asia/Khandyga"
          - "Asia/Kolkata"
          - "Asia/Krasnoyarsk"
          - "Asia/Kuala_Lumpur"
          - "Asia/Kuching"
          - "Asia/Kuwait"
          - "Asia/Macao"
          - "Asia/Macau"
          - "Asia/Magadan"
          - "Asia/Makassar"
          - "Asia/Manila"
          - "Asia/Muscat"
          - "Asia/Nicosia"
          - "Asia/Novokuznetsk"
          - "Asia/Novosibirsk"
          - "Asia/Omsk"
          - "Asia/Oral"
          - "Asia/Phnom_Penh"
          - "Asia/Pontianak"
          - "Asia/Pyongyang"
          - "Asia/Qatar"
          - "Asia/Qostanay"
          - "Asia/Qyzylorda"
          - "Asia/Rangoon"
          - "Asia/Riyadh"
          - "Asia/Saigon"
          - "Asia/Sakhalin"
          - "Asia/Samarkand"
          - "Asia/Seoul"
          - "Asia/Shanghai"
          - "Asia/Singapore"
          - "Asia/Srednekolymsk"
          - "Asia/Taipei"
          - "Asia/Tashkent"
          - "Asia/Tbilisi"
          - "Asia/Tehran"
          - "Asia/Tel_Aviv"
          - "Asia/Thimbu"
          - "Asia/Thimphu"
          - "Asia/Tokyo"
          - "Asia/Tomsk"
          - "Asia/Ujung_Pandang"
          - "Asia/Ulaanbaatar"
          - "Asia/Ulan_Bator"
          - "Asia/Urumqi"
          - "Asia/Ust-Nera"
          - "Asia/Vientiane"
          - "Asia/Vladivostok"
          - "Asia/Yakutsk"
          - "Asia/Yangon"
          - "Asia/Yekaterinburg"
          - "Asia/Yerevan"
          - "Atlantic/Azores"
          - "Atlantic/Bermuda"
          - "Atlantic/Canary"
          - "Atlantic/Cape_Verde"
          - "Atlantic/Faeroe"
          - "Atlantic/Faroe"
          - "Atlantic/Jan_Mayen"
          - "Atlantic/Madeira"
          - "Atlantic/Reykjavik"
          - "Atlantic/South_Georgia"
          - "Atlantic/St_Helena"
          - "Atlantic/Stanley"
          - "Australia/ACT"
          - "Australia/Adelaide"
          - "Australia/Brisbane"
          - "Australia/Broken_Hill"
          - "Australia/Canberra"
          - "Australia/Currie"
          - "Australia/Darwin"
          - "Australia/Eucla"
          - "Australia/Hobart"
          - "Australia/LHI"
          - "Australia/Lindeman"
          - "Australia/Lord_Howe"
          - "Australia/Melbourne"
          - "Australia/NSW"
          - "Australia/North"
          - "Australia/Perth"
          - "Australia/Queensland"
          - "Australia/South"
          - "Australia/Sydney"
          - "Australia/Tasmania"
          - "Australia/Victoria"
          - "Australia/West"
          - "Australia/Yancowinna"
          - "Brazil/Acre"
          - "Brazil/DeNoronha"
          - "Brazil/East"
          - "Brazil/West"
          - "CET"
          - "CST6CDT"
          - "Canada/Atlantic"
          - "Canada/Central"
          - "Canada/Eastern"
          - "Canada/Mountain"
          - "Canada/Newfoundland"
          - "Canada/Pacific"
          - "Canada/Saskatchewan"
          - "Canada/Yukon"
          - "Chile/Continental"
          - "Chile/EasterIsland"
          - "Cuba"
          - "EET"
          - "EST"
          - "EST5EDT"
          - "Egypt"
          - "Eire"
          - "Etc/GMT"
          - "Etc/GMT+0"
          - "Etc/GMT+1"
          - "Etc/GMT+10"
          - "Etc/GMT+11"
          - "Etc/GMT+12"
          - "Etc/GMT+2"
          - "Etc/GMT+3"
          - "Etc/GMT+4"
          - "Etc/GMT+5"
          - "Etc/GMT+6"
          - "Etc/GMT+7"
          - "Etc/GMT+8"
          - "Etc/GMT+9"
          - "Etc/GMT-0"
          - "Etc/GMT-1"
          - "Etc/GMT-10"
          - "Etc/GMT-11"
          - "Etc/GMT-12"
          - "Etc/GMT-13"
          - "Etc/GMT-14"
          - "Etc/GMT-2"
          - "Etc/GMT-3"
          - "Etc/GMT-4"
          - "Etc/GMT-5"
          - "Etc/GMT-6"
          - "Etc/GMT-7"
          - "Etc/GMT-8"
          - "Etc/GMT-9"
          - "Etc/GMT0"
          - "Etc/Greenwich"
          - "Etc/UCT"
          - "Etc/UTC"
          - "Etc/Universal"
          - "Etc/Zulu"
          - "Europe/Amsterdam"
          - "Europe/Andorra"
          - "Europe/Astrakhan"
          - "Europe/Athens"
          - "Europe/Belfast"
          - "Europe/Belgrade"
          - "Europe/Berlin"
          - "Europe/Bratislava"
          - "Europe/Brussels"
          - "Europe/Bucharest"
          - "Europe/Budapest"
          - "Europe/Busingen"
          - "Europe/Chisinau"
          - "Europe/Copenhagen"
          - "Europe/Dublin"
          - "Europe/Gibraltar"
          - "Europe/Guernsey"
          - "Europe/Helsinki"
          - "Europe/Isle_of_Man"
          - "Europe/Istanbul"
          - "Europe/Jersey"
          - "Europe/Kaliningrad"
          - "Europe/Kiev"
          - "Europe/Kirov"
          - "Europe/Lisbon"
          - "Europe/Ljubljana"
          - "Europe/London"
          - "Europe/Luxembourg"
          - "Europe/Madrid"
          - "Europe/Malta"
          - "Europe/Mariehamn"
          - "Europe/Minsk"
          - "Europe/Monaco"
          - "Europe/Moscow"
          - "Europe/Nicosia"
          - "Europe/Oslo"
          - "Europe/Paris"
          - "Europe/Podgorica"
          - "Europe/Prague"
          - "Europe/Riga"
          - "Europe/Rome"
          - "Europe/Samara"
          - "Europe/San_Marino"
          - "Europe/Sarajevo"
          - "Europe/Saratov"
          - "Europe/Simferopol"
          - "Europe/Skopje"
          - "Europe/Sofia"
          - "Europe/Stockholm"
          - "Europe/Tallinn"
          - "Europe/Tirane"
          - "Europe/Tiraspol"
          - "Europe/Ulyanovsk"
          - "Europe/Uzhgorod"
          - "Europe/Vaduz"
          - "Europe/Vatican"
          - "Europe/Vienna"
          - "Europe/Vilnius"
          - "Europe/Volgograd"
          - "Europe/Warsaw"
          - "Europe/Zagreb"
          - "Europe/Zaporozhye"
          - "Europe/Zurich"
          - "GB"
          - "GB-Eire"
          - "GMT"
          - "GMT+0"
          - "GMT-0"
          - "GMT0"
          - "Greenwich"
          - "HST"
          - "Hongkong"
          - "Iceland"
          - "Indian/Antananarivo"
          - "Indian/Chagos"
          - "Indian/Christmas"
          - "Indian/Cocos"
          - "Indian/Comoro"
          - "Indian/Kerguelen"
          - "Indian/Mahe"
          - "Indian/Maldives"
          - "Indian/Mauritius"
          - "Indian/Mayotte"
          - "Indian/Reunion"
          - "Iran"
          - "Israel"
          - "Jamaica"
          - "Japan"
          - "Kwajalein"
          - "Libya"
          - "MET"
          - "MST"
          - "MST7MDT"
          - "Mexico/BajaNorte"
          - "Mexico/BajaSur"
          - "Mexico/General"
          - "NZ"
          - "NZ-CHAT"
          - "Navajo"
          - "PRC"
          - "PST8PDT"
          - "Pacific/Apia"
          - "Pacific/Auckland"
          - "Pacific/Bougainville"
          - "Pacific/Chatham"
          - "Pacific/Chuuk"
          - "Pacific/Easter"
          - "Pacific/Efate"
          - "Pacific/Enderbury"
          - "Pacific/Fakaofo"
          - "Pacific/Fiji"
          - "Pacific/Funafuti"
          - "Pacific/Galapagos"
          - "Pacific/Gambier"
          - "Pacific/Guadalcanal"
          - "Pacific/Guam"
          - "Pacific/Honolulu"
          - "Pacific/Johnston"
          - "Pacific/Kiritimati"
          - "Pacific/Kosrae"
          - "Pacific/Kwajalein"
          - "Pacific/Majuro"
          - "Pacific/Marquesas"
          - "Pacific/Midway"
          - "Pacific/Nauru"
          - "Pacific/Niue"
          - "Pacific/Norfolk"
          - "Pacific/Noumea"
          - "Pacific/Pago_Pago"
          - "Pacific/Palau"
          - "Pacific/Pitcairn"
          - "Pacific/Pohnpei"
          - "Pacific/Ponape"
          - "Pacific/Port_Moresby"
          - "Pacific/Rarotonga"
          - "Pacific/Saipan"
          - "Pacific/Samoa"
          - "Pacific/Tahiti"
          - "Pacific/Tarawa"
          - "Pacific/Tongatapu"
          - "Pacific/Truk"
          - "Pacific/Wake"
          - "Pacific/Wallis"
          - "Pacific/Yap"
          - "Poland"
          - "Portugal"
          - "ROC"
          - "ROK"
          - "Singapore"
          - "Turkey"
          - "UCT"
          - "US/Alaska"
          - "US/Aleutian"
          - "US/Arizona"
          - "US/Central"
          - "US/East-Indiana"
          - "US/Eastern"
          - "US/Hawaii"
          - "US/Indiana-Starke"
          - "US/Michigan"
          - "US/Mountain"
          - "US/Pacific"
          - "US/Samoa"
          - "UTC"
          - "Universal"
          - "W-SU"
          - "WET"
          - "Zulu"
          type: "string"
          description: "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n\
            * `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n\
            * `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n\
            * `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n\
            * `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n\
            * `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n\
            * `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n\
            * `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n\
            * `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n\
            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` -\
            \ Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun`\
            \ - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone`\
            \ - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg`\
            \ - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala`\
            \ - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali`\
            \ - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos`\
            \ - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome`\
            \ - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi`\
            \ - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo`\
            \ - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru`\
            \ - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu`\
            \ - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi`\
            \ - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey`\
            \ - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou`\
            \ - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome`\
            \ - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli`\
            \ - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek`\
            \ - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage`\
            \ - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua`\
            \ - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires`\
            \ - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` -\
            \ America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` -\
            \ America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n\
            * `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja`\
            \ - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n\
            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n\
            * `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan`\
            \ - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n\
            * `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia`\
            \ - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion`\
            \ - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka`\
            \ - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas`\
            \ - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n\
            * `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n\
            * `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista`\
            \ - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise`\
            \ - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n*\
            \ `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande`\
            \ - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas`\
            \ - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne`\
            \ - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago`\
            \ - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Coral_Harbour`\
            \ - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica`\
            \ - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba`\
            \ - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn`\
            \ - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek`\
            \ - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit`\
            \ - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton`\
            \ - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador`\
            \ - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson`\
            \ - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n\
            * `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n\
            * `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n\
            * `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n\
            * `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n\
            * `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n\
            * `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n\
            * `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis`\
            \ - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n\
            * `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg`\
            \ - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n\
            * `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes`\
            \ - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n\
            * `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` -\
            \ America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica`\
            \ - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau`\
            \ - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n\
            * `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN`\
            \ - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz`\
            \ - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles`\
            \ - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n\
            * `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio`\
            \ - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus`\
            \ - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique`\
            \ - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan`\
            \ - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee`\
            \ - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla`\
            \ - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n\
            * `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n\
            * `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n\
            * `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n\
            * `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n\
            * `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n\
            * `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah`\
            \ - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n\
            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n\
            * `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n\
            * `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n\
            * `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n\
            * `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain`\
            \ - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n\
            * `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico`\
            \ - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n\
            * `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet`\
            \ - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina`\
            \ - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco`\
            \ - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel`\
            \ - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago`\
            \ - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n\
            * `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` -\
            \ America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka`\
            \ - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n\
            * `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n\
            * `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n\
            * `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current`\
            \ - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n\
            * `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n\
            * `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n\
            * `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n\
            * `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n\
            * `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n\
            * `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` -\
            \ Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville`\
            \ - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n\
            * `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n\
            * `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n\
            * `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa`\
            \ - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok`\
            \ - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n\
            * `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman`\
            \ - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n\
            * `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad`\
            \ - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` -\
            \ Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n\
            * `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut`\
            \ - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n\
            * `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan`\
            \ - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking`\
            \ - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` -\
            \ Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n\
            * `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe`\
            \ - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza`\
            \ - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n\
            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n\
            * `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul`\
            \ - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura`\
            \ - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul`\
            \ - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi`\
            \ - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu`\
            \ - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga`\
            \ - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk`\
            \ - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching`\
            \ - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n\
            * `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar`\
            \ - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n\
            * `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n\
            * `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n*\
            \ `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak`\
            \ - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar`\
            \ - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda`\
            \ - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` -\
            \ Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n\
            * `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai`\
            \ - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk`\
            \ - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent`\
            \ - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` -\
            \ Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n\
            * `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk`\
            \ - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar`\
            \ - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi`\
            \ - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane`\
            \ - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk`\
            \ - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg`\
            \ - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores`\
            \ - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary`\
            \ - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n*\
            \ `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n\
            * `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n\
            * `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia`\
            \ - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n\
            * `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n\
            * `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` -\
            \ Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n\
            * `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n\
            * `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n\
            * `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n\
            * `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` -\
            \ Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n\
            * `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n\
            * `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n\
            * `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n\
            * `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` -\
            \ Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna`\
            \ - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha`\
            \ - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` -\
            \ Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic`\
            \ - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern`\
            \ - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland`\
            \ - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan`\
            \ - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental`\
            \ - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n*\
            \ `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n\
            * `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0`\
            \ - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n\
            * `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2`\
            \ - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n\
            * `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` -\
            \ Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0`\
            \ - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n\
            * `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13`\
            \ - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n\
            * `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` -\
            \ Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8`\
            \ - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich`\
            \ - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal`\
            \ - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n\
            * `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n\
            * `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n\
            * `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n\
            * `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n\
            * `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n\
            * `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n\
            * `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n\
            * `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n\
            * `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n\
            * `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n\
            * `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n\
            * `Europe/Kirov` - Europe/Kirov\n* `Europe/Lisbon` - Europe/Lisbon\n*\
            \ `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n\
            * `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n\
            * `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n\
            * `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n*\
            \ `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n\
            * `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica`\
            \ - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga`\
            \ - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n\
            * `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n\
            * `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n\
            * `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n*\
            \ `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n\
            * `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n\
            * `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n\
            * `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n\
            * `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n\
            * `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n\
            * `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n\
            * `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n\
            * `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n\
            * `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland`\
            \ - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos`\
            \ - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos`\
            \ - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen`\
            \ - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives`\
            \ - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte`\
            \ - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n\
            * `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein`\
            \ - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT`\
            \ - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur`\
            \ - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n\
            * `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT`\
            \ - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n\
            * `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` -\
            \ Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter`\
            \ - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury`\
            \ - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji`\
            \ - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos`\
            \ - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal`\
            \ - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu`\
            \ - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kiritimati`\
            \ - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein`\
            \ - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas`\
            \ - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru`\
            \ - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk`\
            \ - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago`\
            \ - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn`\
            \ - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape`\
            \ - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n\
            * `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n\
            * `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n\
            * `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n\
            * `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis`\
            \ - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n\
            * `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` -\
            \ Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n\
            * `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central`\
            \ - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern`\
            \ - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n\
            * `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific`\
            \ - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal`\
            \ - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"
        inputs:
          $ref: "#/components/schemas/ScheduleInputs"
        nextExecution:
          type: "string"
          format: "date-time"
          nullable: true
      required:
      - "trigger"
    ScheduleTrigger:
      title: "ScheduleTrigger"
      discriminator:
        propertyName: "type"
        mapping:
          cron: "#/components/schemas/CronTrigger"
          time: "#/components/schemas/TimeTrigger"
          interval: "#/components/schemas/IntervalTrigger"
      oneOf:
      - $ref: "#/components/schemas/CronTrigger"
      - $ref: "#/components/schemas/TimeTrigger"
      - $ref: "#/components/schemas/IntervalTrigger"
    Source:
      title: "Source"
      type: "object"
      properties:
        model:
          enum:
          - "Execution"
          - "TaskExecution"
          - "ActionExecution"
          type: "string"
        id:
          type: "string"
          format: "uuid4"
        str:
          type: "string"
        userStr:
          type: "string"
      required:
      - "model"
      - "id"
      - "str"
      - "userStr"
    Task:
      title: "Task"
      type: "object"
      properties:
        name:
          type: "string"
        action:
          example: "my.app:action_1"
          pattern: "^.+:.+$"
          type: "string"
        description:
          type: "string"
        input:
          type: "object"
        active:
          description: "Specifies whether a task should be skipped as a no operation\
            \ or not."
          default: true
          anyOf:
          - type: "boolean"
          - type: "string"
        position:
          $ref: "#/components/schemas/TaskPosition"
        customSampleResult: {}
        predecessors:
          uniqueItems: true
          type: "array"
          items:
            type: "string"
        conditions:
          $ref: "#/components/schemas/TaskConditionOption"
        withItems:
          type: "string"
        concurrency:
          anyOf:
          - type: "string"
            pattern: "^{{.+}}$"
          - type: "integer"
            minimum: 1
            maximum: 99
        retry:
          $ref: "#/components/schemas/TaskRetryOption"
        timeout:
          description: "Specifies a default task timeout. 15 * 60 (15min) is used\
            \ when not set."
          default: 900
          anyOf:
          - type: "string"
            pattern: "^{{.+}}$"
          - type: "integer"
            minimum: 1
            maximum: 604800
    TaskConditionOption:
      title: "TaskConditionOption"
      type: "object"
      properties:
        states:
          type: "object"
          additionalProperties:
            enum:
            - "SUCCESS"
            - "ERROR"
            - "ANY"
            - "OK"
            - "NOK"
            type: "string"
        custom:
          type: "string"
        else:
          enum:
          - "SKIP"
          - "STOP"
          type: "string"
    TaskExecution:
      type: "object"
      properties:
        id:
          type: "string"
          readOnly: true
        execution:
          type: "string"
          format: "uuid"
          nullable: true
          description: "Parent execution"
        name:
          type: "string"
        state:
          enum:
          - "WAITING"
          - "RUNNING"
          - "SUCCESS"
          - "ERROR"
          type: "string"
          description: "* `WAITING` - WAITING\n* `RUNNING` - RUNNING\n* `SUCCESS`\
            \ - SUCCESS\n* `ERROR` - ERROR"
        stateInfo:
          type: "string"
          nullable: true
        input:
          type: "object"
          additionalProperties: {}
        startedAt:
          type: "string"
          format: "date-time"
          readOnly: true
        endedAt:
          type: "string"
          format: "date-time"
          readOnly: true
        runtime:
          type: "integer"
          description: "Calculate the runtime of an exection in seconds.\nIf the Execution\
            \ is not ended, runtime is calculated until now."
          readOnly: true
        position:
          type: "object"
          properties:
            x:
              type: "integer"
            "y":
              type: "integer"
          required:
          - "x"
          - "y"
          nullable: true
          readOnly: true
        conditions:
          type: "object"
          additionalProperties: {}
          readOnly: true
        predecessors:
          type: "array"
          items:
            type: "string"
          readOnly: true
        active:
          type: "boolean"
          description: "Whether task is active"
          readOnly: true
        result:
          readOnly: true
          anyOf:
          - {}
        conditionResults:
          type: "object"
          additionalProperties: {}
      required:
      - "active"
      - "conditions"
      - "endedAt"
      - "id"
      - "name"
      - "position"
      - "predecessors"
      - "result"
      - "runtime"
      - "startedAt"
    TaskExecutions:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/TaskExecution"
    TaskPosition:
      title: "TaskPosition"
      type: "object"
      properties:
        x:
          type: "integer"
        "y":
          type: "integer"
      required:
      - "x"
      - "y"
    TaskRetryOption:
      title: "TaskRetryOption"
      type: "object"
      properties:
        count:
          description: "Specifies a maximum number of times that a task can be repeated\
            \ in case it fails on execution."
          anyOf:
          - type: "string"
            pattern: "^{{.+}}$"
          - type: "integer"
            minimum: 0
            maximum: 99
        delay:
          description: "Specifies a delay in seconds between subsequent task retries"
          anyOf:
          - type: "string"
            pattern: "^{{.+}}$"
          - type: "integer"
            minimum: 0
            maximum: 3600
        failedLoopIterationsOnly:
          description: "Specifies whether retrying the failed iterations or the whole\
            \ loop. Default: True."
          default: true
          type: "boolean"
      required:
      - "count"
    TaskTransition:
      type: "object"
      description: "The TaskTransitionSerializer inlines the related workflow object\
        \ and list of variables.\nRuntime is added as a property and calculated using\
        \ the started_at and ended_at timestamps."
      properties:
        id:
          type: "string"
          readOnly: true
        taskNameFrom:
          type: "string"
          readOnly: true
        taskNameTo:
          type: "string"
          readOnly: true
      required:
      - "id"
      - "taskNameFrom"
      - "taskNameTo"
    TaskTransitions:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/TaskTransition"
    Tasks:
      title: "Tasks"
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/Task"
    Throttle:
      type: "object"
      properties:
        limitEvents:
          readOnly: true
          anyOf:
          - $ref: "#/components/schemas/ThrottleLimitEvents"
        isLimitHit:
          type: "boolean"
      required:
      - "isLimitHit"
      - "limitEvents"
    ThrottleLimitEvent:
      title: "ThrottleLimitEvent"
      type: "object"
      properties:
        timestamp:
          type: "string"
          format: "date"
        limit:
          type: "integer"
        timeLeftInSeconds:
          type: "integer"
      required:
      - "timestamp"
      - "limit"
      - "timeLeftInSeconds"
    ThrottleLimitEvents:
      title: "ThrottleLimitEvents"
      type: "array"
      items:
        $ref: "#/components/schemas/ThrottleLimitEvent"
    ThrottleRequest:
      type: "object"
      properties:
        isLimitHit:
          type: "boolean"
      required:
      - "isLimitHit"
    TimeTrigger:
      title: "TimeTrigger"
      type: "object"
      properties:
        type:
          enum:
          - "time"
          type: "string"
        time:
          pattern: "^([0-1]{1}[0-9]|2[0-3]):[0-5][0-9]$"
          type: "string"
      required:
      - "type"
      - "time"
      additionalProperties: false
    Trigger:
      type: "object"
      properties:
        schedule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/Schedule"
        eventTrigger:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/EventTrigger"
    TriggerRequest:
      type: "object"
      properties:
        schedule:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/ScheduleRequest"
        eventTrigger:
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/EventTriggerRequest"
    UserSettings:
      type: "object"
      properties:
        groups:
          type: "array"
          items:
            type: "string"
      required:
      - "groups"
    VersionResponse:
      type: "object"
      properties:
        version:
          type: "string"
      required:
      - "version"
    Weekdays:
      title: "Weekdays"
      default:
      - "MO"
      - "TU"
      - "WE"
      - "TH"
      - "FR"
      type: "array"
      items:
        enum:
        - "MO"
        - "TU"
        - "WE"
        - "TH"
        - "FR"
        - "SA"
        - "SU"
        type: "string"
    Workflow:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        title:
          type: "string"
          maxLength: 200
        tasks:
          $ref: "#/components/schemas/Tasks"
        taskDefaults:
          type: "object"
          additionalProperties: {}
        lastExecution:
          readOnly: true
          nullable: true
          anyOf:
          - $ref: "#/components/schemas/Execution"
        description:
          type: "string"
        version:
          type: "integer"
          readOnly: true
        actor:
          type: "string"
          nullable: true
          maxLength: 36
        owner:
          type: "string"
          format: "uuid"
        ownerType:
          enum:
          - "USER"
          - "GROUP"
          type: "string"
          description: "* `USER` - USER\n* `GROUP` - GROUP"
        isPrivate:
          type: "boolean"
          default: true
        triggerType:
          type: "string"
          readOnly: true
        schemaVersion:
          type: "integer"
          maximum: 2147483647
          minimum: -2147483648
        throttle:
          $ref: "#/components/schemas/Throttle"
        trigger:
          $ref: "#/components/schemas/Trigger"
        modificationInfo:
          readOnly: true
          anyOf:
          - $ref: "#/components/schemas/ModificationInfo"
      required:
      - "lastExecution"
      - "modificationInfo"
      - "title"
      - "triggerType"
      - "version"
    WorkflowRequest:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        title:
          type: "string"
          minLength: 1
          maxLength: 200
        tasks:
          $ref: "#/components/schemas/Tasks"
        taskDefaults:
          type: "object"
          additionalProperties: {}
        description:
          type: "string"
        actor:
          type: "string"
          nullable: true
          maxLength: 36
        owner:
          type: "string"
          format: "uuid"
        ownerType:
          enum:
          - "USER"
          - "GROUP"
          type: "string"
          description: "* `USER` - USER\n* `GROUP` - GROUP"
        isPrivate:
          type: "boolean"
          default: true
        schemaVersion:
          type: "integer"
          maximum: 2147483647
          minimum: -2147483648
        throttle:
          $ref: "#/components/schemas/ThrottleRequest"
        trigger:
          $ref: "#/components/schemas/TriggerRequest"
      required:
      - "title"
  securitySchemes:
    ssoAuth:
      type: "oauth2"
      description: "This API uses oauth2 with the 'client credentials' flow"
      flows:
        clientCredentials:
          tokenUrl: "https://sso.dynatrace.com/sso/oauth2/token"
          scopes: {}
