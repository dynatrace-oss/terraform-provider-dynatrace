{
	"allowedScopes": [
		"HOST",
		"HOST_GROUP",
		"environment"
	],
	"description": "This feature allows you to monitor if a minimum number of processes matching the specified monitoring rule are running on your host. If there aren't enough processes matching the rule, you receive an alert. If you also enable **Process instance snapshots**, you receive a detailed report on the activity of the most resource-consuming processes, as well as on the latest activity of the processes matching the rule.",
	"displayName": "Process availability",
	"documentation": "\n\nIn order to monitor the availability of a certain group of processes, you must first define a monitoring rule. Give your monitoring rule a unique name and add its detection rules to which Dynatrace will match the processes on your host.\n\nFor more details, see [Process availability](https://dt-url.net/v923x37)",
	"dynatrace": "1",
	"enums": {
		"OperatingSystem": {
			"description": "",
			"displayName": "Operating System",
			"documentation": "",
			"items": [
				{
					"displayName": "Windows",
					"value": "WINDOWS"
				},
				{
					"displayName": "Linux",
					"value": "LINUX"
				},
				{
					"displayName": "AIX",
					"value": "AIX"
				}
			],
			"type": "enum"
		},
		"ProcessItem": {
			"description": "",
			"displayName": "ProcessItem",
			"documentation": "",
			"items": [
				{
					"displayName": "Executable",
					"value": "executable"
				},
				{
					"displayName": "Executable path",
					"value": "executablePath"
				},
				{
					"displayName": "Command line",
					"value": "commandLine"
				},
				{
					"displayName": "User",
					"value": "user"
				}
			],
			"type": "enum"
		},
		"RuleType": {
			"description": "",
			"displayName": "Rule scope",
			"documentation": "",
			"items": [
				{
					"displayName": "Process",
					"value": "RuleTypeProcess"
				},
				{
					"displayName": "Host",
					"value": "RuleTypeHost"
				}
			],
			"type": "enum"
		}
	},
	"maxObjects": 400,
	"metadata": {
		"addItemButton": "Add monitoring rule",
		"itemDisplayName": "New monitoring rule",
		"minAgentVersion": "1.237"
	},
	"multiObject": true,
	"ordered": true,
	"properties": {
		"enabled": {
			"default": true,
			"description": "",
			"displayName": "Enabled",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "boolean"
		},
		"metadata": {
			"description": "Set of additional key-value properties to be attached to the triggered event.",
			"displayName": "Properties",
			"documentation": "",
			"items": {
				"description": "",
				"displayName": "",
				"documentation": "",
				"type": {
					"$ref": "#/types/MetadataItem"
				}
			},
			"maxObjects": 30,
			"metadata": {
				"addItemButton": "Add Property",
				"itemDisplayName": "New property"
			},
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "set"
		},
		"minimumProcesses": {
			"constraints": [
				{
					"minimum": 1,
					"type": "RANGE"
				}
			],
			"default": 1,
			"description": "",
			"displayName": "Minimum number of matching processes",
			"documentation": "Specify a minimum number of processes matching the monitoring rule. If it's not satisfied, an alert will open.",
			"maxObjects": 1,
			"metadata": {
				"minAgentVersion": "1.287"
			},
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "integer"
		},
		"name": {
			"constraints": [
				{
					"maxLength": 500,
					"minLength": 1,
					"type": "LENGTH"
				}
			],
			"default": "",
			"description": "",
			"displayName": "Monitoring rule name",
			"documentation": "",
			"maxObjects": 1,
			"metadata": {
				"placeholder": "Enter a display name for the monitoring rule."
			},
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "text"
		},
		"operatingSystem": {
			"default": [
				"AIX",
				"LINUX",
				"WINDOWS"
			],
			"description": "",
			"displayName": "Operating system",
			"documentation": "Select the operating systems on which the monitoring rule should be applied.",
			"items": {
				"description": "",
				"displayName": "",
				"documentation": "",
				"type": {
					"$ref": "#/enums/OperatingSystem"
				}
			},
			"maxObjects": 3,
			"minObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "set"
		},
		"rules": {
			"description": "Define process detection rules by selecting a process property and a condition. Each monitoring rule can have multiple detection rules associated with it.",
			"displayName": "Define detection rules",
			"documentation": "",
			"items": {
				"description": "",
				"displayName": "Detection rule definition",
				"documentation": "",
				"type": {
					"$ref": "#/types/DetectionCondition"
				}
			},
			"maxObjects": 100,
			"metadata": {
				"addItemButton": "Add detection rule",
				"itemDisplayName": "New detection rule"
			},
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "list"
		}
	},
	"schemaConstraints": [
		{
			"customMessage": "This name already exists. Please provide a different name.",
			"type": "UNIQUE",
			"uniqueProperties": [
				"name"
			]
		}
	],
	"schemaGroups": [
		"group:processes-and-containers.processes",
		"group:processes-and-containers"
	],
	"schemaId": "builtin:processavailability",
	"types": {
		"DetectionCondition": {
			"description": "",
			"displayName": "DetectionCondition",
			"documentation": "",
			"properties": {
				"condition": {
					"constraints": [
						{
							"customMessage": "Should have one of the following formats: $prefix(parameter), $eq(parameter), $suffix(parameter), $contains(parameter)",
							"pattern": "^\\$eq\\([^\\$,]+\\)$|^\\$prefix\\([^\\$,]+\\)$|^\\$suffix\\([^\\$,]+\\)$|^\\$contains\\([^\\$,]+\\)$",
							"type": "PATTERN"
						},
						{
							"maxLength": 1000,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "- $contains(svc) – Matches if svc appears anywhere in the process property value.\n- $eq(svc.exe) – Matches if svc.exe matches the process property value exactly.\n- $prefix(svc) – Matches if app matches the prefix of the process property value.\n- $suffix(svc.py) – Matches if svc.py matches the suffix of the process property value.\n\nFor example, $suffix(svc.py) would detect processes named loyaltysvc.py and paymentssvc.py.\n\nFor more details, see [Process availability](https://dt-url.net/v923x37).",
					"displayName": "Condition",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"placeholder": "Enter the property condition to be detected using the syntax below."
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"preconditions": [
							{
								"expectedValues": [
									"RuleTypeProcess"
								],
								"property": "ruleType",
								"type": "IN"
							}
						],
						"type": "OR"
					},
					"type": "text"
				},
				"hostMetadataCondition": {
					"description": "",
					"displayName": "Custom metadata",
					"documentation": "Host custom metadata refers to user-defined key-value pairs that you can assign to hosts monitored by Dynatrace.\n\nBy defining custom metadata, you can enrich the monitoring data with context specific to your organization's needs, such as environment names, team ownership, application versions, or any other relevant details.\n\nSee [Define tags and metadata for hosts](https://dt-url.net/w3hv0kbw).",
					"maxObjects": 1,
					"metadata": {
						"minAgentVersion": "1.287"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"expectedValues": [
							"RuleTypeHost"
						],
						"property": "ruleType",
						"type": "IN"
					},
					"type": {
						"$ref": "#/types/HostMetadataCondition"
					}
				},
				"property": {
					"default": "executable",
					"description": "",
					"displayName": "Select process property",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"precondition": {
						"preconditions": [
							{
								"expectedValues": [
									"RuleTypeProcess"
								],
								"property": "ruleType",
								"type": "IN"
							}
						],
						"type": "OR"
					},
					"type": {
						"$ref": "#/enums/ProcessItem"
					}
				},
				"ruleType": {
					"default": "RuleTypeProcess",
					"description": "",
					"displayName": "Rule scope",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/RuleType"
					}
				}
			},
			"summaryPattern": "{ruleType}: {hostMetadataCondition}{property}{hostMetadataCondition/metadataKey} matches {condition}{hostMetadataCondition/metadataCondition}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"HostMetadataCondition": {
			"description": "",
			"displayName": "",
			"documentation": "",
			"properties": {
				"metadataCondition": {
					"constraints": [
						{
							"maxLength": 1000,
							"minLength": 1,
							"type": "LENGTH"
						},
						{
							"customMessage": "This value does not match the required format.",
							"customValidatorId": "ConditionGeneralRule",
							"skipAsyncValidation": false,
							"type": "CUSTOM_VALIDATOR_REF"
						}
					],
					"default": "",
					"description": "",
					"displayName": "Condition",
					"documentation": "This string has to match a required format.\n\n- `$contains(production)` – Matches if `production` appears anywhere in the host metadata value.\n- `$eq(production)` – Matches if `production` matches the host metadata value exactly.\n- `$prefix(production)` – Matches if `production` matches the prefix of the host metadata value.\n- `$suffix(production)` – Matches if `production` matches the suffix of the host metadata value.\n\nAvailable logic operations:\n- `$not($eq(production))` – Matches if the host metadata value is different from `production`.\n- `$and($prefix(production),$suffix(main))` – Matches if host metadata value starts with `production` and ends with `main`.\n- `$or($prefix(production),$suffix(main))` – Matches if host metadata value starts with `production` or ends with `main`.\n\nBrackets **(** and **)** that are part of the matched property **must be escaped with a tilde (~)**",
					"maxObjects": 1,
					"metadata": {
						"placeholder": "Required"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "event_template_variable_placeholder",
					"type": "text"
				},
				"metadataKey": {
					"constraints": [
						{
							"customMessage": "Key property must not contain '{' or '}'.",
							"pattern": "^[^{}]*$",
							"type": "PATTERN"
						},
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "",
					"displayName": "Key",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"placeholder": "Required"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": "text"
				}
			},
			"summaryPattern": "Custom metadata ",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"MetadataItem": {
			"description": "",
			"displayName": "",
			"documentation": "",
			"properties": {
				"metadataKey": {
					"constraints": [
						{
							"type": "NOT_BLANK"
						},
						{
							"customMessage": "Unknown predefined property key.",
							"customValidatorId": "event-property-key-validator",
							"skipAsyncValidation": false,
							"type": "CUSTOM_VALIDATOR_REF"
						},
						{
							"customMessage": "Key property must not contain '{' or '}'.",
							"pattern": "^[^{}]*$",
							"type": "PATTERN"
						},
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "Type 'dt.' for key hints.",
					"displayName": "Key",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"placeholder": "Required"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "event_template_property_key",
					"type": "text"
				},
				"metadataValue": {
					"constraints": [
						{
							"type": "NOT_BLANK"
						},
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "Type '{' for placeholder hints.",
					"displayName": "Value",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"placeholder": "Required"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "event_template_variable_placeholder",
					"type": "text"
				}
			},
			"summaryPattern": "{metadataKey}: {metadataValue}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		}
	},
	"version": "1.0.8"
}