{
	"allowedScopes": [
		"environment"
	],
	"description": "The global attack protection control defines the default per technology for all process groups. To override the default, define custom monitoring rules here. Note that the monitoring rules are ordered; the first matching rule will be applied.",
	"displayName": "Application Protection: Monitoring rules",
	"documentation": "",
	"dynatrace": "1",
	"enums": {
		"AttackType": {
			"description": "",
			"displayName": "Attack type",
			"documentation": "",
			"items": [
				{
					"description": "Includes any attack type",
					"displayName": "Any",
					"value": "ANY"
				},
				{
					"description": "SQL injection attack type",
					"displayName": "SQL injection",
					"value": "SQL_INJECTION"
				},
				{
					"description": "Command injection attack type",
					"displayName": "Command injection",
					"value": "CMD_INJECTION"
				},
				{
					"description": "JNDI injection attack type",
					"displayName": "JNDI injection",
					"value": "JNDI_INJECTION"
				},
				{
					"description": "SSRF attack type",
					"displayName": "SSRF",
					"value": "SSRF"
				}
			],
			"type": "enum"
		},
		"BlockingStrategy": {
			"description": "",
			"displayName": "Attack control",
			"documentation": "",
			"items": [
				{
					"description": "Attacks will be ignored.",
					"displayName": "Off; incoming attacks NOT detected or blocked.",
					"value": "OFF"
				},
				{
					"description": "Attacks will be recorded.",
					"displayName": "Monitor; incoming attacks detected only.",
					"value": "MONITOR"
				},
				{
					"description": "Attacks will be blocked.",
					"displayName": "Block; incoming attacks detected and blocked.",
					"value": "BLOCK"
				}
			],
			"type": "enum"
		},
		"ResourceAttributeValueMatcher": {
			"description": "",
			"displayName": "ResourceAttributeValueMatcher",
			"documentation": "",
			"items": [
				{
					"description": "The resource attribute value must be equal to the specified value.",
					"displayName": "equals",
					"value": "EQUALS"
				},
				{
					"description": "The resource attribute value must not be equal to the specified value.",
					"displayName": "does not equal",
					"value": "NOT_EQUALS"
				},
				{
					"description": "The resource attribute value must contain the specified value.",
					"displayName": "contains",
					"value": "CONTAINS"
				},
				{
					"description": "The resource attribute value must not contain the specified value.",
					"displayName": "does not contain",
					"value": "DOES_NOT_CONTAIN"
				},
				{
					"description": "The resource attribute value must start with the specified value.",
					"displayName": "starts with",
					"value": "STARTS_WITH"
				},
				{
					"description": "The resource attribute value must not start with the specified value.",
					"displayName": "does not start with",
					"value": "DOES_NOT_START_WITH"
				},
				{
					"description": "The resource attribute value must end with the specified value.",
					"displayName": "ends with",
					"value": "ENDS_WITH"
				},
				{
					"description": "The resource attribute value must not end with the specified value.",
					"displayName": "does not end with",
					"value": "DOES_NOT_END_WITH"
				},
				{
					"description": "The resource attribute must be defined (regardless of its value).",
					"displayName": "exists",
					"value": "EXISTS"
				},
				{
					"description": "The resource attribute must not be defined (regardless of its value).",
					"displayName": "does not exist",
					"value": "DOES_NOT_EXIST"
				}
			],
			"type": "enum"
		}
	},
	"maxObjects": 1000,
	"metadata": {
		"addItemButton": "Add new rule"
	},
	"multiObject": true,
	"ordered": true,
	"properties": {
		"attackHandling": {
			"description": "",
			"displayName": "Step 1: Select attack protection behavior",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": {
				"$ref": "#/types/AttackHandling"
			}
		},
		"criteria": {
			"description": "",
			"displayName": "Step 2: Select attack type",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": {
				"$ref": "#/types/Criteria"
			}
		},
		"enabled": {
			"default": true,
			"description": "",
			"displayName": "Enabled",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "boolean"
		},
		"metadata": {
			"description": "",
			"displayName": "Step 4: Leave comment (optional)",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": {
				"$ref": "#/types/Metadata"
			}
		},
		"resourceAttributeConditions": {
			"description": "When you add multiple conditions, the rule applies if all conditions apply.\n\nIf you want the rule to apply only to a subset of your environment, provide the resource attributes that should be used to identify that part of the environment.",
			"displayName": "Step 3: Specify where the rule is applied (optional)",
			"documentation": "",
			"items": {
				"description": "",
				"displayName": "Condition",
				"documentation": "",
				"type": {
					"$ref": "#/types/ResourceAttributeCondition"
				}
			},
			"maxObjects": 100,
			"metadata": {
				"addItemButton": "Add new condition"
			},
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "list",
			"uiCustomization": {
				"table": {
					"columns": [
						{
							"builtinColumnRef": "summary",
							"displayName": "Condition"
						}
					]
				}
			}
		},
		"ruleName": {
			"constraints": [
				{
					"maxLength": 500,
					"minLength": 1,
					"type": "LENGTH"
				}
			],
			"description": "",
			"displayName": "Rule name",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "text"
		}
	},
	"schemaGroups": [
		"group:appsec",
		"group:appsec.attack-protection"
	],
	"schemaId": "builtin:appsec.attack-protection-advanced-config",
	"types": {
		"AttackHandling": {
			"description": "",
			"displayName": "AttackHandling",
			"documentation": "",
			"properties": {
				"blockingStrategy": {
					"default": "MONITOR",
					"description": "Note: Monitoring and blocking have been designed to carry a production-ready performance footprint.\nThe overhead is depending on your application, but should be negligible in most cases.",
					"displayName": "Attack control",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"sortItems": "disabled"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/BlockingStrategy"
					}
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"Criteria": {
			"description": "",
			"displayName": "Criteria",
			"documentation": "",
			"properties": {
				"attackType": {
					"datasource": {
						"filterProperties": [],
						"fullContext": false,
						"identifier": "attackTypeDataSource",
						"resetValue": "NEVER",
						"useApiSearch": false,
						"validate": true
					},
					"default": "ANY",
					"description": "",
					"displayName": "Attack type",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"sortItems": "disabled"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "datasource",
					"type": {
						"$ref": "#/enums/AttackType"
					}
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"Metadata": {
			"description": "",
			"displayName": "Metadata",
			"documentation": "",
			"properties": {
				"comment": {
					"constraints": [
						{
							"maxLength": 5000,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "",
					"displayName": "Comment",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "multiline",
					"type": "text"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"ResourceAttributeCondition": {
			"description": "",
			"displayName": "ResourceAttributeCondition",
			"documentation": "We provide suggestions for resource attribute keys and values based on what we currently see in your environment. You can also enter any value that isn't in the list. Key and value matches are case-sensitive. Resource attributes come out of the box from OneAgent, and you can set them up from [data enrichment](https://docs.dynatrace.com/docs/extend-dynatrace/extend-data).",
			"properties": {
				"matcher": {
					"default": "EQUALS",
					"description": "",
					"displayName": "Matcher",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"sortItems": "disabled"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/ResourceAttributeValueMatcher"
					}
				},
				"resourceAttributeKey": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"datasource": {
						"filterProperties": [],
						"fullContext": false,
						"identifier": "resourceAttributeKeyDataSource",
						"resetValue": "NEVER",
						"useApiSearch": false,
						"validate": false
					},
					"default": "",
					"description": "",
					"displayName": "Resource attribute key",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"autoSelectFirst": "disabled",
						"useCombobox": "enabled"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "datasource",
					"type": "text"
				},
				"resourceAttributeValue": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"datasource": {
						"filterProperties": [
							"resourceAttributeKey"
						],
						"fullContext": false,
						"identifier": "resourceAttributeValueDataSource",
						"resetValue": "NEVER",
						"useApiSearch": false,
						"validate": false
					},
					"description": "",
					"displayName": "Resource attribute value",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"autoSelectFirst": "disabled",
						"useCombobox": "enabled"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"precondition": {
						"precondition": {
							"expectedValues": [
								"EXISTS",
								"DOES_NOT_EXIST"
							],
							"property": "matcher",
							"type": "IN"
						},
						"type": "NOT"
					},
					"subType": "datasource",
					"type": "text"
				}
			},
			"summaryPattern": "{matcher|enumValue, select, EXISTS {\"{resourceAttributeKey}\" {matcher}} DOES_NOT_EXIST {\"{resourceAttributeKey}\" {matcher}} other {\"{resourceAttributeKey}\" {matcher} \"{resourceAttributeValue}\"}}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		}
	},
	"uiCustomization": {
		"table": {
			"columns": [
				{
					"builtinColumnRef": "summary",
					"displayName": "Rule"
				}
			]
		}
	},
	"version": "2.0.3"
}