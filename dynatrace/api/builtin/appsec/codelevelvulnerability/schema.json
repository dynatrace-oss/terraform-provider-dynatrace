{
	"allowedScopes": [
		"environment"
	],
	"description": "The global code-level vulnerability detection control defines the default per technology for all process groups. To override the default, define custom monitoring rules here. Note that the monitoring rules are ordered; the first matching rule will be applied.",
	"displayName": "Vulnerability Analytics: Monitoring rules for code-level vulnerabilities",
	"documentation": "",
	"dynatrace": "1",
	"enums": {
		"MonitoringMode": {
			"description": "",
			"displayName": "MonitoringMode",
			"documentation": "",
			"items": [
				{
					"description": "Code-level vulnerabilities will be ignored ",
					"displayName": "Do not monitor",
					"value": "MONITORING_OFF"
				},
				{
					"description": "Code-level vulnerabilities will be recorded",
					"displayName": "Monitor",
					"value": "MONITORING_ON"
				}
			],
			"type": "enum"
		},
		"ResourceAttributeValueMatcher": {
			"description": "",
			"displayName": "ResourceAttributeValueMatcher",
			"documentation": "",
			"items": [
				{
					"description": "The resource attribute value must be equal to the specified value.",
					"displayName": "equals",
					"value": "EQUALS"
				},
				{
					"description": "The resource attribute value must not be equal to the specified value.",
					"displayName": "does not equal",
					"value": "NOT_EQUALS"
				},
				{
					"description": "The resource attribute value must contain the specified value.",
					"displayName": "contains",
					"value": "CONTAINS"
				},
				{
					"description": "The resource attribute value must not contain the specified value.",
					"displayName": "does not contain",
					"value": "DOES_NOT_CONTAIN"
				},
				{
					"description": "The resource attribute value must start with the specified value.",
					"displayName": "starts with",
					"value": "STARTS_WITH"
				},
				{
					"description": "The resource attribute value must not start with the specified value.",
					"displayName": "does not start with",
					"value": "DOES_NOT_START_WITH"
				},
				{
					"description": "The resource attribute value must end with the specified value.",
					"displayName": "ends with",
					"value": "ENDS_WITH"
				},
				{
					"description": "The resource attribute value must not end with the specified value.",
					"displayName": "does not end with",
					"value": "DOES_NOT_END_WITH"
				},
				{
					"description": "The resource attribute must be defined (regardless of its value).",
					"displayName": "exists",
					"value": "EXISTS"
				},
				{
					"description": "The resource attribute must not be defined (regardless of its value).",
					"displayName": "does not exist",
					"value": "DOES_NOT_EXIST"
				}
			],
			"type": "enum"
		}
	},
	"maxObjects": 1000,
	"metadata": {
		"addItemButton": "Add new rule"
	},
	"multiObject": true,
	"ordered": true,
	"properties": {
		"enabled": {
			"default": true,
			"description": "",
			"displayName": "Enabled",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "boolean"
		},
		"metadata": {
			"description": "",
			"displayName": "Step 3: Leave comment (optional)",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": {
				"$ref": "#/types/Metadata"
			}
		},
		"resourceAttributeConditions": {
			"description": "If you add more than one condition, note that all conditions must be true simultaneously for the rule to apply.\n\nWe provide suggestions for resource attribute keys and values based on what we currently see in your environment. You can also enter any value not currently seen in the list. Resource attributes come out of the box from the OneAgent, and you can set them up from [data enrichment](https://docs.dynatrace.com/docs/extend-dynatrace/extend-data).",
			"displayName": "Step 2: Define conditions (optional)",
			"documentation": "",
			"items": {
				"description": "",
				"displayName": "Condition",
				"documentation": "",
				"type": {
					"$ref": "#/types/ResourceAttributeCondition"
				}
			},
			"maxObjects": 100,
			"metadata": {
				"addItemButton": "Add new condition"
			},
			"minObjects": 0,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": "list",
			"uiCustomization": {
				"table": {
					"columns": [
						{
							"builtinColumnRef": "summary",
							"displayName": "Condition"
						}
					]
				}
			}
		},
		"ruleName": {
			"constraints": [
				{
					"maxLength": 500,
					"minLength": 1,
					"type": "LENGTH"
				}
			],
			"description": "",
			"displayName": "Rule name",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": true,
			"type": "text"
		},
		"vulnerabilityDetectionControl": {
			"description": "",
			"displayName": "Step 1: Select code-level vulnerability detection behavior",
			"documentation": "",
			"maxObjects": 1,
			"modificationPolicy": "DEFAULT",
			"nullable": false,
			"type": {
				"$ref": "#/types/VulnerabilityDetectionControl"
			}
		}
	},
	"schemaGroups": [
		"group:appsec.vulnerability-analytics",
		"group:appsec"
	],
	"schemaId": "builtin:appsec.code-level-vulnerability-rule-settings",
	"types": {
		"Metadata": {
			"description": "",
			"displayName": "Metadata",
			"documentation": "",
			"properties": {
				"comment": {
					"constraints": [
						{
							"maxLength": 5000,
							"type": "LENGTH"
						}
					],
					"default": "",
					"description": "",
					"displayName": "Comment",
					"documentation": "",
					"maxObjects": 1,
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "multiline",
					"type": "text"
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"ResourceAttributeCondition": {
			"description": "",
			"displayName": "ResourceAttributeCondition",
			"documentation": "",
			"properties": {
				"matcher": {
					"default": "EQUALS",
					"description": "",
					"displayName": "Matcher",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"sortItems": "disabled"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/ResourceAttributeValueMatcher"
					}
				},
				"resourceAttributeKey": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"datasource": {
						"filterProperties": [],
						"fullContext": false,
						"identifier": "resourceAttributeKeyDataSource",
						"resetValue": "NEVER",
						"useApiSearch": false,
						"validate": false
					},
					"default": "",
					"description": "",
					"displayName": "Resource attribute key",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"autoSelectFirst": "disabled",
						"useCombobox": "enabled"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"subType": "datasource",
					"type": "text"
				},
				"resourceAttributeValue": {
					"constraints": [
						{
							"maxLength": 500,
							"minLength": 1,
							"type": "LENGTH"
						}
					],
					"datasource": {
						"filterProperties": [
							"resourceAttributeKey"
						],
						"fullContext": false,
						"identifier": "resourceAttributeValueDataSource",
						"resetValue": "NEVER",
						"useApiSearch": false,
						"validate": false
					},
					"description": "",
					"displayName": "Resource attribute value",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"autoSelectFirst": "disabled",
						"useCombobox": "enabled"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": true,
					"precondition": {
						"precondition": {
							"expectedValues": [
								"EXISTS",
								"DOES_NOT_EXIST"
							],
							"property": "matcher",
							"type": "IN"
						},
						"type": "NOT"
					},
					"subType": "datasource",
					"type": "text"
				}
			},
			"summaryPattern": "{matcher|enumValue, select, EXISTS {\"{resourceAttributeKey}\" {matcher}} DOES_NOT_EXIST {\"{resourceAttributeKey}\" {matcher}} other {\"{resourceAttributeKey}\" {matcher} \"{resourceAttributeValue}\"}}",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		},
		"VulnerabilityDetectionControl": {
			"description": "",
			"displayName": "VulnerabilityDetectionControl",
			"documentation": "",
			"properties": {
				"monitoringMode": {
					"default": "MONITORING_OFF",
					"description": "",
					"displayName": "Code-level vulnerability control",
					"documentation": "",
					"maxObjects": 1,
					"metadata": {
						"sortItems": "disabled"
					},
					"modificationPolicy": "DEFAULT",
					"nullable": false,
					"type": {
						"$ref": "#/enums/MonitoringMode"
					}
				}
			},
			"summaryPattern": "",
			"type": "object",
			"version": "0",
			"versionInfo": ""
		}
	},
	"uiCustomization": {
		"table": {
			"columns": [
				{
					"builtinColumnRef": "summary",
					"displayName": "Rule"
				}
			]
		}
	},
	"version": "3.0.1"
}