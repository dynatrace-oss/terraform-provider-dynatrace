---
layout: ""
page_title: dynatrace_service_naming_order Resource - terraform-provider-dynatrace"
subcategory: "Service Monitoring"
description: |-
  The resource `dynatrace_service_naming_order` covers defining the order of rules defined for service naming
---

# dynatrace_service_naming_order (Resource)

-> This resource requires the API token scopes **Read configuration** (`ReadConfig`) and **Write configuration** (`WriteConfig`)

## Dynatrace Documentation

- Service naming rules - https://www.dynatrace.com/support/help/how-to-use-dynatrace/services/service-detection-and-naming/customize-service-naming

- Conditional naming API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/conditional-naming

## Export Example Usage

- `terraform-provider-dynatrace -export dynatrace_service_naming_order` downloads an ordered list of service naming rule IDs

The full documentation of the export feature is available [here](https://dt-url.net/h203qmc).

## Resource Example Usage

The example below contains configuration for two service naming rules.
The resource `dynatrace_service_naming_order` defines what order these naming rules should get evaluated in.

In case the Dynatrace environment contains additional service naming rules that are not managed by Terraform, these
naming rules will end up ranked with lower priority than the ones listed within the `dynatrace_service_naming_order` resource.

-> Be aware of the fact that the resource `dynatrace_service_naming_order` should be treated as a singleton. Maintaining more than one instances of `dynatrace_service_naming_order` within the same Terraform module is not recommended. It will result in non-empty plans.

```terraform
resource "dynatrace_service_naming_order" "this" {
  naming_rule_ids = [
    dynatrace_service_naming.first.id,
    dynatrace_service_naming.second.id,
  ]  
}

resource "dynatrace_service_naming" "first" {
  name    = "first"
  enabled = true
  ...
}

resource "dynatrace_service_naming" "second" {
  name    = "second"
  enabled = true
  ...
}
```

{{ .SchemaMarkdown | trimspace }}
 