---
layout: ""
page_title: dynatrace_user Resource - terraform-provider-dynatrace"
subcategory: "IAM"
description: |-
  The resource `dynatrace_user` covers configuration for users
---

# dynatrace_user (Resource)

-> **Dynatrace Managed only**

-> To utilize this resource, please define the environment variables `DT_CLUSTER_URL` and `DT_CLUSTER_API_TOKEN` with the cluster API token scope **Service Provider API** (`ServiceProviderAPI`).

## Dynatrace Documentation

- User and group management - https://docs.dynatrace.com/managed/manage/identity-access-management/user-and-group-management

- User management API - https://www.dynatrace.com/support/help/dynatrace-api/account-management-api/user-management-api

## Export Example Usage

- `terraform-provider-dynatrace -export dynatrace_user` downloads all existing users

The full documentation of the export feature is available [here](https://dt-url.net/h203qmc).

## Resource Example Usage

```terraform
variable "cluster" {
  default = "<the-id-of-your-dynatrace-cluster>"
}

variable "environment" {
  default = "<the-id-of-an-environment-within-your-cluster"
}

resource "dynatrace_user_group" "terraform" {
  name        = "Anonymous"
  ldap_groups = ["Anonymous"]
}

resource "dynatrace_user" "terraform" {
  email      = "me@example.com"
  first_name = "John"
  groups     = [dynatrace_user_group.terraform.id]
  last_name  = "Doe"
  user_name  = "me@example.com"
}

resource "dynatrace_policy" "terraform_cluster" {
  name            = "terraform_cluster"
  cluster         = var.cluster
  statement_query = "ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \"terraform-cluster\";"
}

resource "dynatrace_policy" "terraform_env" {
  name            = "terraform_env"
  environment     = var.environment
  statement_query = "ALLOW environment:roles:viewer;"
}

resource "dynatrace_policy_bindings" "terraform_cluster_binding" {
  cluster  = var.cluster
  group    = dynatrace_user_group.terraform.id
  policies = [dynatrace_policy.terraform_cluster.id]
}

resource "dynatrace_policy_bindings" "terraform_env_binding" {
  environment = var.environment
  group       = dynatrace_user_group.terraform.id
  policies    = [dynatrace_policy.terraform_env.id]
}
```

{{ .SchemaMarkdown | trimspace }}
 