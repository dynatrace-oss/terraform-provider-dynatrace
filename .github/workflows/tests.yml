name: Tests
on:
  push:
    branches:
      - '**'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.22
      - name: Check out source code
        uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false      
      - name: Build
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go build .
      - name: TestAccBusinessCalendars
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          DYNATRACE_AUTOMATION_CLIENT_ID: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_ID }}
          DYNATRACE_AUTOMATION_CLIENT_SECRET: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_SECRET }}
          DYNATRACE_AUTOMATION_TOKEN_URL: ${{ secrets.DYNATRACE_AUTOMATION_TOKEN_URL }}
          DYNATRACE_AUTOMATION_ENVIRONMENT_URL: ${{ secrets.DYNATRACE_AUTOMATION_ENVIRONMENT_URL }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/automation/business_calendars
      - name: TestAccSiteReliabilityGuardian
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          DYNATRACE_AUTOMATION_CLIENT_ID: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_ID }}
          DYNATRACE_AUTOMATION_CLIENT_SECRET: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_SECRET }}
          DYNATRACE_AUTOMATION_TOKEN_URL: ${{ secrets.DYNATRACE_AUTOMATION_TOKEN_URL }}
          DYNATRACE_AUTOMATION_ENVIRONMENT_URL: ${{ secrets.DYNATRACE_AUTOMATION_ENVIRONMENT_URL }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/app/dynatrace/sitereliabilityguardian
      - name: TestAccSchedulingRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          DYNATRACE_AUTOMATION_CLIENT_ID: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_ID }}
          DYNATRACE_AUTOMATION_CLIENT_SECRET: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_SECRET }}
          DYNATRACE_AUTOMATION_TOKEN_URL: ${{ secrets.DYNATRACE_AUTOMATION_TOKEN_URL }}
          DYNATRACE_AUTOMATION_ENVIRONMENT_URL: ${{ secrets.DYNATRACE_AUTOMATION_ENVIRONMENT_URL }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/automation/scheduling_rules
      - name: TestAccWorkflows
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          DYNATRACE_AUTOMATION_CLIENT_ID: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_ID }}
          DYNATRACE_AUTOMATION_CLIENT_SECRET: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_SECRET }}
          DYNATRACE_AUTOMATION_TOKEN_URL: ${{ secrets.DYNATRACE_AUTOMATION_TOKEN_URL }}
          DYNATRACE_AUTOMATION_ENVIRONMENT_URL: ${{ secrets.DYNATRACE_AUTOMATION_ENVIRONMENT_URL }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/automation/workflows
      - name: TestDatabaseAppFeatureFlags
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/app/dynatrace/database/featureflags 
      - name: TestInfraOpsAppFeatureFlags
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/app/dynatrace/infraops/featureflags 
      - name: TestJiraForWorkflows
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/app/dynatrace/jiraconnection 
      - name: TestSlackForWorkflows
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/app/dynatrace/slackconnection 
      - name: TestAttributeAllowlist
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/attribute/allowlist      
      - name: TestAttributeBlocklist
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/attribute/blocklist
      - name: TestAttributesPreferences
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/attribute/preferences
      - name: TestCrashdumpAnalytics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/crashdump/analytics
      - name: TestAppMonitoring
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/dtjavascriptruntime/appmonitoring
      - name: TestGrailSecurityContext
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredentities/grail/securitycontext
      - name: TestGrailMetricsAllowall
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/grail/metrics/allowall
      - name: TestGrailMetricsAllowlist
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/grail/metrics/allowlist
      - name: TestHubSubscriptions
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/hub/subscriptions
      - name: TestMobileNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/mobile/notifications
      - name: TestAttributeMasking
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/attribute/masking
      - name: TestEBPFServiceDiscovery
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/ebpf/service/discovery
      - name: TestDavisAnomalyDetectors
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/davis/anomalydetectors
      - name: TestUnifiedServicesEndpointMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/unifiedservices/endpointmetrics
      - name: TestUnifiedServicesEnablement
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/unifiedservices/enablement
      - name: TestBizEventsSecurityContext
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/bizevents/security/contextrules
      - name: TestAppSecVulnerabilitySettings
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/appsec/runtimevulnerabilitydetection
      - name: TestAppSecVulnerabilityThirdParty
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/appsec/rulesettings
      - name: TestAppSecVulnerabilityCode
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/appsec/codelevelvulnerability
      - name: TestAppSecNotification
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/appsec/notificationintegration
      - name: TestAppSecVulnerabilityAlerting
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/appsec/notificationalertingprofile
      - name: TestAppSecAttackAlerting
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/appsec/notificationattackalertingprofile
      - name: TestAppSecAttackProtectionSettings
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/appsec/attackprotectionsettings
      - name: TestAppSecAttackProtectionRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/appsec/attackprotectionadvancedconfig 
      - name: TestAppSecAttackProtectionAllowlist
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/appsec/attackprotectionallowlistconfig  
      - name: TestURLBasedSampling
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/urlbasedsampling
      - name: TestDatabaseAnomalyDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/databases
      - name: TestServiceAnomalyDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/services
      - name: TestInfraDiskAnomalyDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/infrastructure/disks
      - name: TestInfraPerDiskAnomalyDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/infrastructure/disks/perdiskoverride
      - name: TestInfraHostAnomalyDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/infrastructure/hosts
      - name: TestCustomAppAnomalyDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/rum/custom
      - name: TestCustomAppCrashRate
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/rum/custom/crashrate
      - name: TestMobileAppAnomalyDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/rum/mobile
      - name: TestMobileAppCrashRate
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/rum/mobile/crashrate
      - name: TestMutedRequests
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/settings/mutedrequests
      - name: TestConnectivityAlerts
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/alerting/connectivityalerts
      - name: TestDeclarativeGrouping
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/declarativegrouping
      - name: TestHostMonitoring
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/host/monitoring
      - name: TestHostMonitoringMode
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/host/monitoring/mode
      - name: TestHostMonitoringAdvanced
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/host/monitoring/advanced
      - name: TestIPAddressMasking
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/preferences/ipaddressmasking
      - name: TestHostProcessGroupMonitoring
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/host/processgroups/monitoringstate
      - name: TestRUMIPLocations
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/ipmappings
      - name: TestCustomAppEnablement
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/custom/enablement
      - name: TestMobileAppEnablement
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/mobile/enablement
      - name: TestWebAppEnablement
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/enablement
      - name: TestRUMProcessGroup
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/processgroup
      - name: TestRUMProviderBreakdown
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/providerbreakdown
      - name: TestUserExperienceScore
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/userexperiencescore
      - name: TestWebAppResourceCleanup
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/resourcecleanuprules
      - name: TestUpdateWindows
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/deployment/management/updatewindows
      - name: TestProcessGroupDetectionFlags
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/processgroup/detectionflags
      - name: TestProcessGroupMonitoring
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/processgroup/monitoring/state
      - name: TestProcessGroupSimpleDetectionRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/processgroup/simpledetectionrule
      - name: TestLogMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/logmonitoring/schemalesslogmetric
      - name: TestLogBuckets
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/logmonitoring/logbucketsrules
      - name: TestBrowserMonitorPerformanceThresholds
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/synthetic/browser/performancethresholds
      - name: TestHTTPMonitorPerformanceThresholds
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/synthetic/http/performancethresholds
      - name: TestHTTPMonitorCookies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/synthetic/http/cookies
      - name: TestSessionReplayWebPrivacy
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/sessionreplay/web/privacypreferences
      - name: TestSessionReplayResourceCapture
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/sessionreplay/web/resourcecapturing
      - name: TestBrowserMonitorOutageHandling
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/synthetic/browser/outagehandling
      - name: TestHTTPMonitorOutageHandling
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/synthetic/http/outagehandling
      - name: TestMonitoredTechnologiesApache
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/apache
      - name: TestMonitoredTechnologiesDotNet
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/dotnet
      - name: TestMonitoredTechnologiesGo
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/go
      - name: TestMonitoredTechnologiesIIS
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/iis
      - name: TestMonitoredTechnologiesJava
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/java
      - name: TestMonitoredTechnologiesNGINX
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/nginx
      - name: TestMonitoredTechnologiesNodeJS
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/nodejs
      - name: TestMonitoredTechnologiesOpenTracing
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/opentracingnative
      - name: TestMonitoredTechnologiesPHP
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/php
      - name: TestMonitoredTechnologiesVarnish
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/varnish
      - name: TestMonitoredTechnologiesWSMB
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredtechnologies/wsmb
      - name: TestProcessVisibility
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/processvisibility
      - name: TestRUMHostHeaders
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/hostheaders
      - name: TestRUMIPDetermination
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/ipdetermination
      - name: TestMobileAppRequestErrors
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/mobile/requesterrors
      - name: TestRUMOverloadPrevention
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/overloadprevention
      - name: TestRUMAdvancedCorrelation
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/resourcetimingorigins
      - name: TestWebAppBeaconOrigins
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/beacondomainorigins
      - name: TestWebAppBeaconEndpoint
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/beaconendpoint
      - name: TestWebAppCustomConfigProperties
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/customconfigurationproperties
      - name: TestWebAppInjectionCookie
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/injection/cookie
      - name: TestWebAppResourceTypes
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/resourcetypes
      - name: TestGenericTypes
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredentities/generic/type
      - name: TestGenericRelationships
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoredentities/generic/relation
      - name: TestSLONormalization
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoring/slo/normalization
      - name: TestDataPrivacy
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/preferences/privacy
      - name: TestServiceFailure
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/failuredetection/service/generalparameters
      - name: TestServiceHTTPFailure
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/failuredetection/service/httpparameters
      - name: TestDiskOptions
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/disk/options
      - name: TestOSServicesMonitoring
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/osservicesmonitoring
      - name: TestExtensionExecutionController
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/eec/local
      - name: TestNetTracerTraffic
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/nettracer/traffic
      - name: TestAIXKernelExtension
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/host/monitoring/aixkernelextension
      - name: TestMetricMetadata
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/metric/metadata
      - name: TestMetricQuery
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/metric/query
      - name: TestActiveGateToken
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/activegatetoken
      - name: TestAuditLog
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/auditlog
      - name: TestK8sClusterAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/kubernetes/cluster
      - name: TestK8sNamespaceAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/kubernetes/namespace
      - name: TestK8sNodeAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/kubernetes/node
      - name: TestK8sWorkloadAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/kubernetes/workload
      - name: TestContainerBuiltinRule
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/container/builtinmonitoringrule
      - name: TestContainerRule
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/container/monitoringrule
      - name: TestContainerTechnology
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/container/technology
      - name: TestContainerRegistry
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/container/registry
      - name: TestRemoteEnvironments
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/remote/environment
      - name: TestWebAppCustomErrors
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/customerrors
      - name: TestWebAppRequestErrors
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/requesterrors
      - name: TestDashboardsGeneral
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/dashboards/general
      - name: TestDashboardsPresets
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/dashboards/presets
      - name: TestLogProcessing
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/logmonitoring/logdpprules
      - name: TestLogSecurityContext
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/logmonitoring/logsecuritycontextrules
      - name: TestLogCustomAttributes
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/logmonitoring/logcustomattributes
      - name: TestLogEvents
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/logmonitoring/logevents
      - name: TestLogTimestamp
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/logmonitoring/timestampconfiguration
      - name: TestEULASettings
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/eulasettings
      - name: TestAPIDetectionRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/apis/detectionrules
      - name: TestServiceExternalWebRequest
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/servicedetection/externalwebrequest
      - name: TestServiceExternalWebService
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/servicedetection/externalwebservice
      - name: TestServiceFullWebRequest
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/servicedetection/fullwebrequest
      - name: TestServiceFullWebService
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/servicedetection/fullwebservice
      - name: TestDashboardsAllowlist
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/dashboards/image/allowlist
      - name: TestFailureDetectionParameters
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/failuredetection/environment/parameters
      - name: TestFailureDetectionRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/failuredetection/environment/rules
      - name: TestLogOneAgent
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/logmonitoring/logagentconfiguration
      - name: TestIssueTracking
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/issuetracking/integration
      - name: TestGeolocationSettings
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/geosettings
      - name: TestUserSessionCustomMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/custommetrics
      - name: TestCustomUnits
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/customunit
      - name: TestDiskAnalytics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/disk/analytics/extension
      - name: TestBizEventsOneAgent
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/bizevents/http/incoming
      - name: TestBizEventsBuckets
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/bizevents/processing/buckets
      - name: TestBizEventsMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/bizevents/processing/metrics
      - name: TestBizEventsProcessing
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/bizevents/processing/pipelines
      - name: TestProcessGroupAlerting
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/availability/processgroupalerting
      - name: TestNetworkTraffic
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/exclude/network/traffic
      - name: TestTokenSettings
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/tokens/tokensettings
      - name: TestExtensionExecutionControllerRemote
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/eec/remote
      - name: TestK8sPVCAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/kubernetes/pvc
      - name: TestUserActionCustomMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/useractioncustommetrics
      - name: TestWebAppJavascriptVersion
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/customrumjavascriptversion
      - name: TestWebAppJavascriptUpdates
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/rumjavascriptupdates
      - name: TestOpenTelemetryMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/opentelemetrymetrics
      - name: TestActiveGateUpdates
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/deployment/activegate/updates
      - name: TestOneAgentSideMasking
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/oneagent/masking
      - name: TestOneAgentDefaultVersion
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/deployment/oneagent/defaultversion
      - name: TestOneAgentUpdates
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/deployment/oneagent/updates
      - name: TestOwnershipTeams
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/ownership/teams
      - name: TestApplicationDetectionRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/appdetection
      - name: TestKubernetes
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/cloud/kubernetes
      - name: TestKubernetesApp
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/apptransition/kubernetes
      - name: TestK8sMonitoring
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/cloud/kubernetes/monitoring
      - name: TestCloudFoundry
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/cloud/cloudfoundry
      - name: TestDiskAnomalyDetectionRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/diskrules
      - name: TestInfraAWSAnomalyDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/infrastructure/aws
      - name: TestInfraVMwareAnomalyDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/infrastructure/vmware
      - name: TestSLO
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/monitoring/slo
      - name: TestAutoTags
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/tags/autotagging
      - name: TestAutoTagRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/tags/autotagging/rules
      - name: TestMobileAppKeyPerformance
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/mobile/keyperformancemetrics
      - name: TestWebAppKeyPerformanceCustom
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/keyperformancemetric/customactions
      - name: TestWebAppKeyPerformanceLoad
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/keyperformancemetric/loadactions
      - name: TestWebAppKeyPerformanceXHR
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/rum/web/keyperformancemetric/xhractions
      - name: TestOwnershipConfig
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/ownership/config
      - name: TestBuiltinProcessMonitoring
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/process/builtinprocessmonitoringrule
      - name: TestLimitOutboundConnections
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/dtjavascriptruntime/allowedoutboundconnections
      - name: TestSpanEvents
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/span/eventattribute
      - name: TestVMware
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/virtualization/vmware
      - name: TestLogCustomSource
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/logmonitoring/customlogsourcesettings
      - name: TestAlerting
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/alerting
      - name: TestApplicationAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/anomalies/applications
      - name: TestDatabaseAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/anomalies/databaseservices
      - name: TestDiskEventAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/anomalies/diskevents
      - name: TestHostAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/anomalies/hosts
      - name: TestMetricEventAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/anomalies/metricevents
      - name: TestProcessGroupAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/anomalies/processgroups
      - name: TestServiceAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/anomalies/services
      - name: TestMobileApplications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/applications/mobile
      - name: TestWebApplications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/applications/web
      - name: TestApplicationDetectionRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/applications/web/detection
      - name: TestAutoTags
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/autotags
      - name: TestAWSCredentials
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/credentials/aws
      - name: TestAzureCredentials
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/credentials/azure
      - name: TestCloudFoundryCredentials
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/credentials/cloudfoundry
      - name: TestKubernetesCredentials
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/credentials/kubernetes
      - name: TestCredentials
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v2/credentials/vault
      - name: TestCustomServices
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/customservices
      - name: TestCustomTags
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/customtags
      - name: TestDashboards
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/dashboards
      - name: TestJSONDashboards
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/jsondashboards
      - name: TestMaintenanceWindows
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/maintenance
      - name: TestManagementZones
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/managementzones
      - name: TestCalculatedServiceMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/metrics/calculated/service
      - name: TestCalculatedWebMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/metrics/calculated/web
      - name: TestCalculatedMobileMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/metrics/calculated/mobile
      - name: TestCalculatedSyntheticMetrics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/metrics/calculated/synthetic
      - name: TestConditionalHostNaming
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/naming/hosts
      - name: TestConditionalProcessGroupNaming
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/naming/processgroups
      - name: TestConditionalServiceNaming
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/naming/services
      - name: TestNetworkZones
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/networkzones
      - name: TestNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/notifications
      - name: TestRequestAttributes
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/requestattributes
      - name: TestRequestNaming
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/requestnaming
      - name: TestRequestNamingOrder
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/requestnaming/order
      - name: TestSyntheticLocations
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/synthetic/locations
      - name: TestSyntheticLocations
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/synthetic/locations
      - name: TestPrivateSyntheticLocations
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/synthetic/locations/private
      - name: TestBrowserMonitors
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/synthetic/monitors/browser
      - name: TestHTTPMonitors
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/synthetic/monitors/http
      - name: TestHTTPMonitorScript
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v1/config/synthetic/monitors/http/script
      - name: TestAlerting
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/alerting/profile
      - name: TestFrequentIssues
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/frequentissues
      - name: TestMetricEventAnomalies
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/anomalydetection/metricevents
      - name: TestAPITokens
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v2/apitokens
      - name: TestAGTokens
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v2/activegatetokens
      - name: TestDDUPools
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/accounting/ddulimit
      - name: TestMQFilters
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/mainframe/mqfilters
      - name: TestIMSBridges
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/ibmmq/imsbridges
      - name: TestQueueManagers
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/ibmmq/queuemanagers
      - name: TestQueueSharingGroups
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/ibmmq/queuesharinggroup
      - name: TestKeyRequests
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/settings/keyrequests
      - name: TestMaintenanceWindows
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/alerting/maintenancewindow
      - name: TestManagementZones
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/managementzones
      - name: TestNetworkZones
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/networkzones
      - name: TestAnsibleTowerNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/ansible
      - name: TestEmailNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/email
      - name: TestJiraNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/jira
      - name: TestOpsGenieNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/opsgenie
      - name: TestPagerDutyNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/pagerduty
      - name: TestServiceNowNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/servicenow
      - name: TestSlackNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/slack
      - name: TestTrelloNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/trello
      - name: TestVictorOpsNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/victorops
      - name: TestWebHookNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/webhook
      - name: TestXMattersNotifications
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/problem/notifications/xmatters
      - name: TestServiceLevelObjectives
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v2/slo
      - name: TestSpanAttributes
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/span/attribute
      - name: TestSpanCaptureRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/span/capturing
      - name: TestContextPropagationSettings
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/span/contextpropagation
      - name: TestSpanEntryPoints
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/span/entrypoints
      - name: TestResourceAttributes
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/resourceattribute
      - name: TestProcessMonitoring
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/process/monitoring
      - name: TestProcessMonitoringRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/process/monitoring/custom
      - name: TestProcessAvailability
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/processavailability
      - name: TestAdvancedProcessGroupDetectionRules
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/processgroup/advanceddetectionrule
      - name: TestUsabilityAnalytics
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/usability/analytics
      - name: TestSyntheticAvailability
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/synthetic/availability
      - name: TestWorkloadDetection
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/builtin/processgroup/cloudapplication/workloaddetection
      - name: TestGenericSetting
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          DYNATRACE_AUTOMATION_CLIENT_ID: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_ID }}
          DYNATRACE_AUTOMATION_CLIENT_SECRET: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_SECRET }}
          DYNATRACE_AUTOMATION_ENVIRONMENT_URL: ${{ secrets.DYNATRACE_AUTOMATION_ENVIRONMENT_URL }}
          DYNATRACE_AUTOMATION_TOKEN_URL: ${{ secrets.DYNATRACE_AUTOMATION_TOKEN_URL }}
        run: go test -v ./dynatrace/api/builtin/generic
      - name: TestPlatformBuckets
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          DYNATRACE_AUTOMATION_CLIENT_ID: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_ID }}
          DYNATRACE_AUTOMATION_CLIENT_SECRET: ${{ secrets.DYNATRACE_AUTOMATION_CLIENT_SECRET }}
          DYNATRACE_AUTOMATION_ENVIRONMENT_URL: ${{ secrets.DYNATRACE_AUTOMATION_ENVIRONMENT_URL }}
          DYNATRACE_AUTOMATION_TOKEN_URL: ${{ secrets.DYNATRACE_AUTOMATION_TOKEN_URL }}
          DYNATRACE_LOG_HTTP: "terraform-provider-dynatrace.log"
          DYNATRACE_HTTP_RESPONSE: true
        run: go test -v ./dynatrace/api/platform/buckets
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: TestPlatformBucketsResults
          path: ./dynatrace/api/platform/buckets/terraform_provider_dynatrace.http.log
          retention-days: 5
      - name: TestCustomDevices
        if: success() || failure()
        env:
          GOPROXY: "https://proxy.golang.org"
          TF_ACC: true
          DYNATRACE_DEBUG: true
          DT_NO_REPAIR_INPUT: false
          DYNATRACE_ENV_URL: ${{ secrets.DYNATRACE_ENV_URL }}
          DYNATRACE_API_TOKEN: ${{ secrets.DYNATRACE_API_TOKEN }}
          IAM_CLIENT_ID: ${{ secrets.IAM_CLIENT_ID }}
          IAM_ACCOUNT_ID: ${{ secrets.IAM_ACCOUNT_ID }}
          IAM_CLIENT_SECRET: ${{ secrets.IAM_CLIENT_SECRET }}
        run: go test -v ./dynatrace/api/v2/customdevice
